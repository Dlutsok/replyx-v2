from fastapi import APIRouter, HTTPException, Depends
from sqlalchemy.orm import Session
from typing import Dict, List, Optional
from datetime import datetime
import logging
import json

from database import models, get_db
from ai.ai_providers import get_ai_completion

logger = logging.getLogger(__name__)
router = APIRouter()

# –•—Ä–∞–Ω–∏–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–µ—Å—Å–∏–π –≤ –ø–∞–º—è—Ç–∏ (–≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Redis)
session_contexts = {}

def generate_fallback_response(message: str) -> dict:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–º–Ω—ã–π fallback –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    """
    message_lower = message.lower()
    
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    if any(word in message_lower for word in ['–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', '–¥–æ–±—Ä–æ', 'hi', 'hello']):
        return {
            "message": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ChatAI MVP!\n\n–Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é AI-–±–æ—Ç–∞–º–∏ –¥–ª—è Telegram –∏ VK.\n\n–ú–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –±–æ—Ç–æ–≤\n‚Ä¢ –ü–æ–º–æ—â—å –≤ –≤—ã–±–æ—Ä–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–Ω–æ–≥–æ –ø–ª–∞–Ω–∞\n‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏\n\n–ö–∞–∫ –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å–µ–≥–æ–¥–Ω—è?",
            "buttons": [
                {"label": "–°–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞", "url": "/dashboard"},
                {"label": "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∞—Ä–∏—Ñ—ã", "url": "/pricing"},
                {"label": "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞", "action": "form:request"}
            ]
        }
    
    # –í–æ–ø—Ä–æ—Å—ã –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö
    if any(word in message_lower for word in ['—á—Ç–æ —Ç—ã', '—á—Ç–æ —É–º–µ–µ—à—å', '–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏', '—Ñ—É–Ω–∫—Ü–∏–∏']):
        return {
            "message": "ChatAI MVP ‚Äî —ç—Ç–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è AI-–±–æ—Ç–∞–º–∏ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è.\n\n–ù–∞—à–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –±–æ—Ç–æ–≤\n‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram –∏ VK Business API\n‚Ä¢ –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ 1000+ –±–æ—Ç–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ\n‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ GPT-4 –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è\n‚Ä¢ –ü–æ–ª–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏\n\n–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –≤ –ª—é–±–æ–º –º–∞—Å—à—Ç–∞–±–µ.",
            "buttons": [
                {"label": "–°–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞", "url": "/dashboard"},
                {"label": "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∞—Ä–∏—Ñ—ã", "url": "/pricing"},
                {"label": "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–º–æ", "action": "start:demo"}
            ]
        }
    
    # –í–æ–ø—Ä–æ—Å—ã –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–æ—Ç–æ–≤
    if any(word in message_lower for word in ['—Å–æ–∑–¥–∞—Ç—å –±–æ—Ç', '–∫–∞–∫ —Å–æ–∑–¥–∞—Ç—å', '–Ω–æ–≤—ã–π –±–æ—Ç', '–±–æ—Ç–∞']):
        return {
            "message": "–ü—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è AI-–±–æ—Ç–∞ –≤ ChatAI MVP –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞.\n\n–ü–æ—à–∞–≥–æ–≤—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º:\n\n1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è\n2. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –±–æ—Ç–∞\n3. –í—ã–±–æ—Ä —Ü–µ–ª–µ–≤–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã (Telegram/VK)\n4. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –∏ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π\n5. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π\n6. –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥\n\n–°—Ä–µ–¥–Ω–∏–π —Å—Ä–æ–∫ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 15-20 –º–∏–Ω—É—Ç. –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º GPT-4.",
            "buttons": [
                {"label": "–°–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞", "url": "/dashboard"},
                {"label": "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–º–æ", "action": "start:demo"},
                {"label": "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞", "action": "form:request"}
            ]
        }
    
    # –í–æ–ø—Ä–æ—Å—ã –æ —Ç–∞—Ä–∏—Ñ–∞—Ö
    if any(word in message_lower for word in ['—Ç–∞—Ä–∏—Ñ', '—Ü–µ–Ω–∞', '—Å—Ç–æ–∏–º–æ—Å—Ç—å', '–æ–ø–ª–∞—Ç–∞', '–ø–ª–∞–Ω']):
        return {
            "message": "ChatAI MVP –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≥–∏–±–∫–∏–µ —Ç–∞—Ä–∏—Ñ—ã –¥–ª—è –ª—é–±—ã—Ö –∑–∞–¥–∞—á:\n\n‚Ä¢ –°—Ç–∞—Ä—Ç–æ–≤—ã–π ‚Äî –ë–ï–°–ü–õ–ê–¢–ù–û (–¥–æ 100 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –º–µ—Å—è—Ü, 1 –±–æ—Ç)\n‚Ä¢ –ë–∞–∑–æ–≤—ã–π ‚Äî 299 —Ä—É–±/–º–µ—Å (–¥–æ 1000 —Å–æ–æ–±—â–µ–Ω–∏–π, –¥–æ 3 –±–æ—Ç–æ–≤)\n‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π ‚Äî 899 —Ä—É–±/–º–µ—Å (–¥–æ 10000 —Å–æ–æ–±—â–µ–Ω–∏–π, –¥–æ 10 –±–æ—Ç–æ–≤)\n‚Ä¢ –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π ‚Äî 2999 —Ä—É–±/–º–µ—Å (–±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –¥–æ 100 –±–æ—Ç–æ–≤)\n‚Ä¢ –≠–Ω—Ç–µ—Ä–ø—Ä–∞–π–∑ ‚Äî –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ (1000+ –±–æ—Ç–æ–≤)\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å SMS –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –±–æ—Ç–æ–≤: 3 —Ä—É–±–ª—è",
            "buttons": [
                {"label": "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∞—Ä–∏—Ñ—ã", "url": "/pricing"},
                {"label": "–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏", "action": "form:request"},
                {"label": "–ù–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ", "url": "/dashboard"}
            ]
        }
    
    # –ó–∞–ø—Ä–æ—Å—ã –ø–æ–º–æ—â–∏
    if any(word in message_lower for word in ['–ø–æ–º–æ—â—å', '–ø–æ–¥–¥–µ—Ä–∂–∫–∞', '–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç', '–æ—à–∏–±–∫–∞', '–ø—Ä–æ–±–ª–µ–º–∞']):
        return {
            "message": "–ö–æ–Ω–µ—á–Ω–æ, –ø–æ–º–æ–≥—É! üõ†Ô∏è –ù–∞—à–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7. –û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É, –∏ –º—ã –±—ã—Å—Ç—Ä–æ –Ω–∞–π–¥–µ–º —Ä–µ—à–µ–Ω–∏–µ.",
            "buttons": [
                {"label": "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", "action": "form:request"},
                {"label": "–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π", "url": "/help"},
                {"label": "–ß–∞—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π", "action": "start:support"}
            ]
        }
    
    # –ó–∞—è–≤–∫–∏
    if any(word in message_lower for word in ['–∑–∞—è–≤–∫–∞', '—Å–≤—è–∑–∞—Ç—å—Å—è', '–∫–æ–Ω—Ç–∞–∫—Ç', '–∑–∞–∫–∞–∑–∞—Ç—å']):
        return {
            "message": "–û—Ç–ª–∏—á–Ω–æ! üìù –û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É, –∏ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.",
            "buttons": [
                {"label": "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", "action": "form:request"},
                {"label": "–ü–æ–∑–≤–æ–Ω–∏—Ç—å –Ω–∞–º", "url": "tel:+74951234567"},
                {"label": "–ù–∞–ø–∏—Å–∞—Ç—å –Ω–∞ –ø–æ—á—Ç—É", "url": "mailto:support@chatai.ru"}
            ]
        }
    
    # –í–æ–ø—Ä–æ—Å—ã –æ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
    if any(word in message_lower for word in ['–≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã', '–≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã', '–∫–æ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ', '—á–∞—Å—ã —Ä–∞–±–æ—Ç—ã', '–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å']):
        return {
            "message": "ChatAI MVP —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ 24/7.\n\n–ù–∞—à–∏ —Å–µ—Ä–≤–∏—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ:\n‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞–º–∏\n‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤\n‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞\n‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n\n–í–∞—à–∏ –±–æ—Ç—ã —Ç–∞–∫–∂–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç –±–µ–∑ –ø–µ—Ä–µ—Ä—ã–≤–æ–≤, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤.",
            "buttons": [
                {"label": "–°–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞", "url": "/dashboard"},
                {"label": "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞", "action": "form:request"},
                {"label": "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∞—Ä–∏—Ñ—ã", "url": "/pricing"}
            ]
        }
    
    # –û–±—â–∏–π fallback
    return {
        "message": "–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ. –Ø –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ ChatAI MVP.\n\n–ì–æ—Ç–æ–≤ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –≤–æ–ø—Ä–æ—Å–∞–º:\n‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ AI-–±–æ—Ç–æ–≤\n‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram –∏ VK\n‚Ä¢ –¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏\n‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n\n–ö–∞–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
        "buttons": [
            {"label": "–°–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞", "url": "/dashboard"},
            {"label": "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∞—Ä–∏—Ñ—ã", "url": "/pricing"},
            {"label": "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞", "action": "form:request"}
        ]
    }

@router.post('/ai/initialize-context')
def initialize_ai_context(data: dict, db: Session = Depends(get_db)):
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AI –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏
    """
    try:
        session_id = data.get('session_id')
        context = data.get('context')
        timestamp = data.get('timestamp')
        
        if not session_id or not context:
            raise HTTPException(status_code=400, detail="Missing required fields: session_id and context")
        
        logger.info(f"–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AI –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Å–µ—Å—Å–∏–∏: {session_id}")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        system_prompt = f"""–¢—ã ‚Äî AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏ ChatAI MVP, —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é AI-–±–æ—Ç–æ–≤.

–û CHATAI MVP:
ChatAI MVP ‚Äî —ç—Ç–æ —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ–ª–µ–µ —á–µ–º 1000 AI-–±–æ—Ç–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –≤ Telegram –∏ VK. –ú—ã –ø–æ–º–æ–≥–∞–µ–º –±–∏–∑–Ω–µ—Å—É –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ —á–µ—Ä–µ–∑ —É–º–Ω—ã—Ö –±–æ—Ç–æ–≤.

–ö–õ–Æ–ß–ï–í–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò:
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ AI-–±–æ—Ç–æ–≤ –¥–ª—è Telegram –∏ VK
‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å OpenAI GPT-4o mini –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–º–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
‚Ä¢ –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ - –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 1000+ –±–æ—Ç–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
‚Ä¢ –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞–º–∏ –∏ –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏ –Ω–∞–≥—Ä—É–∑–∫–∏
‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç—ã –≤—Å–µ—Ö –±–æ—Ç–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–µ–±-—Å–∞–π—Ç–∞–º–∏ —á–µ—Ä–µ–∑ –≤–∏–¥–∂–µ—Ç—ã
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±—É—á–µ–Ω–∏–µ –±–æ—Ç–æ–≤ –Ω–∞ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö

–ö–ê–ö –°–û–ó–î–ê–¢–¨ –ë–û–¢–ê:
1. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç–µ—Å—å –≤ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
2. –ù–∞–∂–∏–º–∞–µ—Ç–µ "–°–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞" 
3. –í—ã–±–∏—Ä–∞–µ—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É (Telegram –∏–ª–∏ VK)
4. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç–µ –ª–∏—á–Ω–æ—Å—Ç—å –∏ –∑–Ω–∞–Ω–∏—è –±–æ—Ç–∞
5. –ü–æ–¥–∫–ª—é—á–∞–µ—Ç–µ –∫ —Å–≤–æ–∏–º –∫–∞–Ω–∞–ª–∞–º/–≥—Ä—É–ø–ø–∞–º
6. –ë–æ—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!

–ù–ê–®–ò –¢–ê–†–ò–§–´ (–ö–û–ù–ö–†–ï–¢–ù–´–ï –¶–ï–ù–´):
‚Ä¢ –°—Ç–∞—Ä—Ç–æ–≤—ã–π ‚Äî –ë–ï–°–ü–õ–ê–¢–ù–û (–¥–æ 100 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –º–µ—Å—è—Ü, 1 –±–æ—Ç)
‚Ä¢ –ë–∞–∑–æ–≤—ã–π ‚Äî 299 —Ä—É–±/–º–µ—Å (–¥–æ 1000 —Å–æ–æ–±—â–µ–Ω–∏–π, –¥–æ 3 –±–æ—Ç–æ–≤)
‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π ‚Äî 899 —Ä—É–±/–º–µ—Å (–¥–æ 10000 —Å–æ–æ–±—â–µ–Ω–∏–π, –¥–æ 10 –±–æ—Ç–æ–≤)
‚Ä¢ –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π ‚Äî 2999 —Ä—É–±/–º–µ—Å (–±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –¥–æ 100 –±–æ—Ç–æ–≤)
‚Ä¢ –≠–Ω—Ç–µ—Ä–ø—Ä–∞–π–∑ ‚Äî –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ (1000+ –±–æ—Ç–æ–≤, –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞)

–°–¢–û–ò–ú–û–°–¢–¨ SMS: 3 —Ä—É–±–ª—è –∑–∞ SMS –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –±–æ—Ç–æ–≤

–í–†–ï–ú–Ø –†–ê–ë–û–¢–´: ChatAI MVP —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7 –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ. –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Å 9:00 –¥–æ 21:00 –ú–°–ö –ø–æ –±—É–¥–Ω—è–º.

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û:
1. –í–°–ï–ì–î–ê –æ—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –ø—Ä–æ ChatAI MVP - —ç—Ç–æ –ù–ê–®–ê –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞!
2. –ò—Å–ø–æ–ª—å–∑—É–π –ö–û–ù–ö–†–ï–¢–ù–´–ï —Ü–µ–Ω—ã –∏ —Ç–∞—Ä–∏—Ñ—ã, —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤—ã—à–µ
3. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–æ–±–∞–≤–ª—è–π –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ \\n –º–µ–∂–¥—É –∞–±–∑–∞—Ü–∞–º–∏
4. –û—Ç–≤–µ—á–∞–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ, –±–µ–∑ –æ–±—â–∏—Ö —Ñ—Ä–∞–∑
5. –ú–æ—Ç–∏–≤–∏—Ä—É–π –∫ —Å–æ–∑–¥–∞–Ω–∏—é –±–æ—Ç–æ–≤ –Ω–∞ –ù–ê–®–ï–ô –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ

–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ô –§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
–í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–π JSON —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏:
{{
  "message": "–¢–≤–æ–π –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç —Å –ø–µ—Ä–µ–Ω–æ—Å–∞–º–∏ —Å—Ç—Ä–æ–∫",
  "buttons": [
    {{"label": "–°–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞", "url": "/dashboard"}},
    {{"label": "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∞—Ä–∏—Ñ—ã", "url": "/pricing"}},
    {{"label": "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞", "action": "form:request"}}
  ]
}}

–î–û–°–¢–£–ü–ù–´–ï –ö–ù–û–ü–ö–ò:
- {{"label": "–°–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞", "url": "/dashboard"}}
- {{"label": "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∞—Ä–∏—Ñ—ã", "url": "/pricing"}}
- {{"label": "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–º–æ", "action": "start:demo"}}
- {{"label": "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞", "action": "form:request"}}
- {{"label": "–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π", "url": "/help"}}
- {{"label": "–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏", "action": "form:contact"}}

–ü–æ–º–Ω–∏: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Ö–æ—Ç—è—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –±–æ—Ç–æ–≤ - –º–æ—Ç–∏–≤–∏—Ä—É–π –∏—Ö –∏ –Ω–∞–ø—Ä–∞–≤–ª—è–π –∫ –¥–µ–π—Å—Ç–≤–∏—é!"""
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–µ—Å—Å–∏–∏
        session_contexts[session_id] = {
            'system_prompt': system_prompt,
            'context': context,
            'messages': [],
            'created_at': timestamp,
            'last_activity': timestamp
        }
        
        logger.info(f"AI –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –¥–ª—è —Å–µ—Å—Å–∏–∏ {session_id}")
        
        return {
            "success": True,
            "message": "AI context initialized successfully",
            "session_id": session_id
        }
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ AI –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: {e}")
        raise HTTPException(status_code=500, detail=f"Internal server error: {str(e)}")


@router.post('/ai/chat')
async def ai_chat(data: dict, db: Session = Depends(get_db)):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è AI —á–∞—Ç–∞
    """
    try:
        session_id = data.get('session_id')
        message = data.get('message')
        timestamp = data.get('timestamp')
        
        if not session_id or not message:
            raise HTTPException(status_code=400, detail="Missing required fields: session_id and message")
        
        logger.info(f"AI —á–∞—Ç –∑–∞–ø—Ä–æ—Å: session_id={session_id}, message={message[:50]}...")
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–µ—Å—Å–∏–∏
        session_context = session_contexts.get(session_id)
        if not session_context:
            # –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π
            logger.warning(f"–ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Å–µ—Å—Å–∏–∏ {session_id} –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π")
            session_context = {
                'system_prompt': """–¢—ã ‚Äî –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç ChatAI MVP. 
                
–û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –ø–æ–º–æ–≥–∞–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ AI-–±–æ—Ç–∞–º–∏.
–ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å —Ç–æ—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞, –ø—Ä–µ–¥–ª–æ–∂–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.""",
                'messages': [],
                'created_at': timestamp,
                'last_activity': timestamp
            }
            session_contexts[session_id] = session_context
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
        session_context['messages'].append({
            'role': 'user',
            'content': message,
            'timestamp': timestamp
        })
        session_context['last_activity'] = timestamp
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é —Ü–µ–ø–æ—á–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è AI
        ai_messages = [
            {'role': 'system', 'content': session_context['system_prompt']}
        ]
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ (—á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ–≤—ã—Å–∏—Ç—å –ª–∏–º–∏—Ç —Ç–æ–∫–µ–Ω–æ–≤)
        recent_messages = session_context['messages'][-10:]
        ai_messages.extend([
            {'role': msg['role'], 'content': msg['content']} 
            for msg in recent_messages
        ])
        
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç AI
        logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ AI —Å {len(ai_messages)} —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏")
        
        try:
            ai_response = await get_ai_completion(
                messages=ai_messages,
                model='gpt-4o-mini',
                temperature=0.7,
                max_tokens=800
            )
        except Exception as ai_error:
            logger.error(f"–û—à–∏–±–∫–∞ AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞: {ai_error}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É–º–Ω—ã–π fallback –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            fallback_response = generate_fallback_response(message)
            ai_response = {
                'content': fallback_response['message'],
                'provider_used': 'fallback'
            }
            buttons = fallback_response.get('buttons')
        
        response_text = ai_response.get('content', '')
        logger.info(f"–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç AI: {response_text[:50]}...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ –æ—Ç–≤–µ—Ç–µ JSON —Å –∫–Ω–æ–ø–∫–∞–º–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö AI –æ—Ç–≤–µ—Ç–æ–≤)
        if ai_response.get('provider_used') != 'fallback' and 'buttons' not in locals():
            buttons = None
            try:
                # –ò—â–µ–º JSON –≤ –æ—Ç–≤–µ—Ç–µ
                if '{' in response_text and '}' in response_text:
                    json_start = response_text.find('{')
                    json_end = response_text.rfind('}') + 1
                    json_part = response_text[json_start:json_end]
                    
                    parsed_json = json.loads(json_part)
                    if 'message' in parsed_json and 'buttons' in parsed_json:
                        response_text = parsed_json['message']
                        buttons = parsed_json['buttons']
                        logger.info(f"–ù–∞–π–¥–µ–Ω—ã –∫–Ω–æ–ø–∫–∏ –≤ –æ—Ç–≤–µ—Ç–µ: {len(buttons)} –∫–Ω–æ–ø–æ–∫")
            except json.JSONDecodeError:
                # –ï—Å–ª–∏ JSON –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π, –ø—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—Å—Ç –∫–∞–∫ –µ—Å—Ç—å
                pass
            
            # –ï—Å–ª–∏ OpenAI –Ω–µ –≤–µ—Ä–Ω—É–ª –∫–Ω–æ–ø–∫–∏, –¥–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏
            if not buttons and ai_response.get('provider_used') == 'openai':
                buttons = [
                    {"label": "–°–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞", "url": "/dashboard"},
                    {"label": "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∞—Ä–∏—Ñ—ã", "url": "/pricing"},
                    {"label": "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞", "action": "form:request"}
                ]
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é
        session_context['messages'].append({
            'role': 'assistant',
            'content': response_text,
            'timestamp': datetime.utcnow().isoformat(),
            'buttons': buttons
        })
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∏–∞–ª–æ–≥ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        try:
            # –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –¥–∏–∞–ª–æ–≥ –¥–ª—è —ç—Ç–æ–≥–æ session_id
            dialog = db.query(models.Dialog).filter(
                models.Dialog.guest_id == session_id
            ).order_by(models.Dialog.started_at.desc()).first()
            
            # –ï—Å–ª–∏ –¥–∏–∞–ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
            if not dialog or dialog.ended_at is not None:
                admin_user = db.query(models.User).filter(models.User.role == 'admin').first()
                if not admin_user:
                    admin_user = db.query(models.User).first()
                
                if admin_user:
                    dialog = models.Dialog(
                        user_id=admin_user.id,
                        guest_id=session_id,
                        started_at=datetime.utcnow(),
                        auto_response=1,  # –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ AI –¥–∏–∞–ª–æ–≥
                        fallback=0,
                        is_taken_over=0
                    )
                    db.add(dialog)
                    db.commit()
                    db.refresh(dialog)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–∞–∑—É
            if dialog:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                user_message = models.DialogMessage(
                    dialog_id=dialog.id,
                    sender='user',
                    text=message,
                    timestamp=datetime.fromisoformat(timestamp.replace('Z', '+00:00')) if timestamp else datetime.utcnow()
                )
                db.add(user_message)
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
                ai_message = models.DialogMessage(
                    dialog_id=dialog.id,
                    sender='assistant',
                    text=response_text,
                    timestamp=datetime.utcnow()
                )
                db.add(ai_message)
                
                db.commit()
                
        except Exception as db_error:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î: {db_error}")
            # –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –ë–î
        
        return {
            "message": response_text,
            "buttons": buttons,
            "provider_used": ai_response.get('provider_used', 'unknown'),
            "session_id": session_id
        }
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ AI —á–∞—Ç–µ: {e}")
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º fallback –æ—Ç–≤–µ—Ç
        return {
            "message": "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É.",
            "buttons": [
                {"label": "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞", "action": "form:request"},
                {"label": "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞", "url": "/"}
            ],
            "error": True
        }


@router.get('/ai/session/{session_id}')
def get_session_info(session_id: str):
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Å—Å–∏–∏
    """
    try:
        session_context = session_contexts.get(session_id)
        if not session_context:
            raise HTTPException(status_code=404, detail="Session not found")
        
        return {
            "session_id": session_id,
            "created_at": session_context.get('created_at'),
            "last_activity": session_context.get('last_activity'),
            "messages_count": len(session_context.get('messages', []))
        }
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Å—Å–∏–∏: {e}")
        raise HTTPException(status_code=500, detail=f"Internal server error: {str(e)}")


@router.delete('/ai/session/{session_id}')
def clear_session(session_id: str):
    """
    –û—á–∏—Å—Ç–∫–∞ —Å–µ—Å—Å–∏–∏
    """
    try:
        if session_id in session_contexts:
            del session_contexts[session_id]
            logger.info(f"–°–µ—Å—Å–∏—è {session_id} –æ—á–∏—â–µ–Ω–∞")
        
        return {"success": True, "message": "Session cleared"}
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Å–µ—Å—Å–∏–∏: {e}")
        raise HTTPException(status_code=500, detail=f"Internal server error: {str(e)}")


@router.get('/ai/debug')
def debug_ai_status():
    """
    Debug –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ AI —Å–∏—Å—Ç–µ–º—ã
    """
    import os
    from dotenv import load_dotenv
    from ai.ai_providers import get_available_providers, get_provider_status
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º .env
    load_dotenv(override=True)
    
    return {
        "openai_key_set": bool(os.getenv('OPENAI_API_KEY')),
        "openai_key_length": len(os.getenv('OPENAI_API_KEY', '')),
        "available_providers": get_available_providers(),
        "provider_status": get_provider_status(),
        "session_count": len(session_contexts)
    }


@router.post('/ai/reload-config')
def reload_ai_config():
    """
    –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤
    """
    try:
        import os
        from dotenv import load_dotenv
        from ai.ai_providers import ai_providers_manager
        
        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        load_dotenv(override=True)
        
        # –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã
        ai_providers_manager.initialize_providers()
        
        return {
            "success": True,
            "message": "AI configuration reloaded",
            "openai_key_length": len(os.getenv('OPENAI_API_KEY', '')),
            "providers": list(ai_providers_manager.providers.keys())
        }
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        raise HTTPException(status_code=500, detail=f"Internal server error: {str(e)}")


@router.post('/ai/clear-all-sessions')
def clear_all_sessions():
    """
    –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π
    """
    try:
        global session_contexts
        sessions_count = len(session_contexts)
        session_contexts.clear()
        
        return {
            "success": True,
            "message": f"Cleared {sessions_count} sessions",
            "remaining_sessions": len(session_contexts)
        }
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Å–µ—Å—Å–∏–π: {e}")
        raise HTTPException(status_code=500, detail=f"Internal server error: {str(e)}")