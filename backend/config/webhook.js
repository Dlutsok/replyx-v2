/**
 * üåê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø WEBHOOK –î–õ–Ø TELEGRAM –ë–û–¢–û–í
 * –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Ä–µ–∂–∏–º–∞ —Å webhook –≤–º–µ—Å—Ç–æ polling
 */

const config = {
    // –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: 'polling' –∏–ª–∏ 'webhook'
    MODE: process.env.BOT_MODE || 'polling',
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ webhook
    WEBHOOK: {
        // –ü—É–±–ª–∏—á–Ω—ã–π URL —Å–µ—Ä–≤–µ—Ä–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å HTTPS –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ)
        HOST: process.env.WEBHOOK_HOST || 'https://yourdomain.com',
        
        // –ü–æ—Ä—Ç –¥–ª—è webhook —Å–µ—Ä–≤–µ—Ä–∞
        PORT: process.env.WEBHOOK_PORT || 8443,
        
        // –ü—É—Ç—å –¥–ª—è webhook endpoints
        PATH: process.env.WEBHOOK_PATH || '/webhook',
        
        // SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç (–¥–ª—è —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö)
        SSL_CERT: process.env.WEBHOOK_SSL_CERT || null,
        SSL_KEY: process.env.WEBHOOK_SSL_KEY || null,
        
        // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
        MAX_CONNECTIONS: process.env.WEBHOOK_MAX_CONNECTIONS || 40,
        
        // –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö IP –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (Telegram IPs)
        ALLOWED_UPDATES: [
            'message',
            'callback_query', 
            'inline_query',
            'chosen_inline_result'
        ],
        
        // –°–µ–∫—Ä–µ—Ç –¥–ª—è –∑–∞—â–∏—Ç—ã webhook
        SECRET_TOKEN: process.env.WEBHOOK_SECRET || null
    },
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ polling (fallback)
    POLLING: {
        INTERVAL: 1000,
        TIMEOUT: 10,
        AUTO_START: false
    },
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–æ–≤
    AUTO_SWITCH: {
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ webhook –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
        ENABLE: process.env.AUTO_SWITCH_MODE === 'true',
        
        // –ö—Ä–∏—Ç–µ—Ä–∏–∏ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ webhook
        CRITERIA: {
            // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–æ—Ç–æ–≤ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
            MIN_BOTS: 5,
            // –ß–∞—Å—Ç–æ—Ç–∞ –æ—à–∏–±–æ–∫ 409 (–≤ –º–∏–Ω—É—Ç—É)
            MAX_409_ERRORS_PER_MINUTE: 10
        }
    }
};

// –î–µ—Ç–µ–∫—Ü–∏—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Å—Ä–µ–¥—ã
const isProduction = process.env.NODE_ENV === 'production' || 
                   process.env.WEBHOOK_HOST?.includes('https://');

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞
if (config.AUTO_SWITCH.ENABLE) {
    if (isProduction && config.WEBHOOK.HOST.startsWith('https://')) {
        config.MODE = 'webhook';
        console.log('üåê –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±—Ä–∞–Ω WEBHOOK —Ä–µ–∂–∏–º –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞');
    } else {
        config.MODE = 'polling';
        console.log('üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±—Ä–∞–Ω POLLING —Ä–µ–∂–∏–º –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏');
    }
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
function validateConfig() {
    if (config.MODE === 'webhook') {
        if (!config.WEBHOOK.HOST || !config.WEBHOOK.HOST.startsWith('https://')) {
            throw new Error('WEBHOOK —Ä–µ–∂–∏–º —Ç—Ä–µ–±—É–µ—Ç HTTPS URL –≤ WEBHOOK_HOST');
        }
        
        if (!config.WEBHOOK.PORT) {
            throw new Error('WEBHOOK —Ä–µ–∂–∏–º —Ç—Ä–µ–±—É–µ—Ç —É–∫–∞–∑–∞–Ω–∏—è WEBHOOK_PORT');
        }
        
        console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è webhook –≤–∞–ª–∏–¥–Ω–∞');
    }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ URL –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –±–æ—Ç–∞
function getWebhookUrl(botToken) {
    if (config.MODE !== 'webhook') {
        return null;
    }
    
    const botId = botToken.split(':')[0];
    return `${config.WEBHOOK.HOST}:${config.WEBHOOK.PORT}${config.WEBHOOK.PATH}/${botId}`;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ webhook –¥–ª—è –±–æ—Ç–∞
function getWebhookSettings(botToken) {
    if (config.MODE !== 'webhook') {
        return null;
    }
    
    return {
        url: getWebhookUrl(botToken),
        max_connections: config.WEBHOOK.MAX_CONNECTIONS,
        allowed_updates: config.WEBHOOK.ALLOWED_UPDATES,
        secret_token: config.WEBHOOK.SECRET_TOKEN,
        drop_pending_updates: true
    };
}

// –≠–∫—Å–ø–æ—Ä—Ç
module.exports = {
    config,
    isProduction,
    validateConfig,
    getWebhookUrl,
    getWebhookSettings,
    
    // –£—Ç–∏–ª–∏—Ç—ã
    isWebhookMode: () => config.MODE === 'webhook',
    isPollingMode: () => config.MODE === 'polling',
    
    // Telegram IP –¥–∏–∞–ø–∞–∑–æ–Ω—ã –¥–ª—è webhook (–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ)
    TELEGRAM_IPS: [
        '149.154.160.0/20',
        '91.108.4.0/22'
    ]
}; 