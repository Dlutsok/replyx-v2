#!/usr/bin/env python3
"""
üîÑ –ü–ï–†–ï–ò–ù–î–ï–ö–°–ê–¶–ò–Ø –î–û–ö–£–ú–ï–ù–¢–ê –° GPT-4O

–ü–µ—Ä–µ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º GPT-4o
–¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
"""

import os
import sys
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.connection import SessionLocal
from database import models
from sqlalchemy import text
from api.documents import analyze_document_internal
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def reindex_document(doc_id, user_id):
    """–ü–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞"""
    db = SessionLocal()
    
    try:
        print(f"üîÑ –ü–ï–†–ï–ò–ù–î–ï–ö–°–ê–¶–ò–Ø –î–û–ö–£–ú–ï–ù–¢–ê ID={doc_id}")
        print("=" * 50)
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = db.query(models.User).filter(models.User.id == user_id).first()
        if not user:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID={user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        doc = db.query(models.Document).filter(
            models.Document.id == doc_id,
            models.Document.user_id == user_id
        ).first()
        
        if not doc:
            print(f"‚ùå –î–æ–∫—É–º–µ–Ω—Ç ID={doc_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            return
        
        print(f"üìÑ –î–æ–∫—É–º–µ–Ω—Ç: {doc.filename}")
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.email}")
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ –∑–Ω–∞–Ω–∏–π –¥–ª—è —ç—Ç–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        old_knowledge = db.query(models.UserKnowledge).filter(
            models.UserKnowledge.doc_id == doc_id
        ).all()
        
        print(f"üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π –∑–Ω–∞–Ω–∏–π: {len(old_knowledge)}")
        
        for knowledge in old_knowledge:
            db.delete(knowledge)
        
        db.commit()
        
        # –ü–µ—Ä–µ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–æ–∫—É–º–µ–Ω—Ç —Å GPT-4o
        print("ü§ñ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–æ–∫—É–º–µ–Ω—Ç —Å GPT-4o...")
        analysis_result = analyze_document_internal(doc_id, user, db)
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        assistants = db.query(models.Assistant).filter(
            models.Assistant.user_id == user_id
        ).all()
        
        print(f"üë• –ù–∞–π–¥–µ–Ω–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤: {len(assistants)}")
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏ –∑–Ω–∞–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
        for assistant in assistants:
            # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Å–∞–º–º–∞—Ä–∏ –≤ –æ–¥–∏–Ω –∫–æ–Ω—Ç–µ–Ω—Ç
            combined_content = "\n\n".join([
                summary["summary"] for summary in analysis_result["summaries"]
            ])
            
            # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –∑–Ω–∞–Ω–∏–π
            knowledge = models.UserKnowledge(
                user_id=user_id,
                assistant_id=assistant.id,
                doc_id=doc_id,
                content=combined_content,
                type='summary',
                doc_type=analysis_result.get("doc_type", "document"),
                importance=10
            )
            db.add(knowledge)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∑–∞–ø–∏—Å—å –∑–Ω–∞–Ω–∏–π –¥–ª—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞: {assistant.name}")
        
        db.commit()
        
        print("üéâ –ü–ï–†–ï–ò–ù–î–ï–ö–°–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
        print("ü§ñ –ë–æ—Ç—ã —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è —Å GPT-4o –∞–Ω–∞–ª–∏–∑–æ–º")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á–∞—Å—Ç—å –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        if assistants:
            latest_knowledge = db.query(models.UserKnowledge).filter(
                models.UserKnowledge.doc_id == doc_id,
                models.UserKnowledge.assistant_id == assistants[0].id
            ).first()
            
            if latest_knowledge:
                print("\nüìù –§–†–ê–ì–ú–ï–ù–¢ –ù–û–í–û–ì–û –ê–ù–ê–õ–ò–ó–ê:")
                print("-" * 40)
                print(latest_knowledge.content[:500] + "...")
        
    except Exception as e:
        db.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏: {e}")
        logger.error(f"Reindexing error: {e}")
    
    finally:
        db.close()

if __name__ == "__main__":
    # –ü–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID=1 (admin@example.com)
    doc_id = 77  # –ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
    user_id = 1  # admin@example.com
    
    print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –î–æ–∫—É–º–µ–Ω—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å GPT-4o!")
    print("üîÑ –≠—Ç–æ –∑–∞–º–µ–Ω–∏—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–Ω–∞–Ω–∏—è –Ω–æ–≤—ã–º –∞–Ω–∞–ª–∏–∑–æ–º")
    
    confirm = input("\nü§î –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): ")
    if confirm.lower() == 'yes':
        reindex_document(doc_id, user_id)
    else:
        print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")