# fail2ban filter для ReplyX application
# 
# Этот фильтр обнаруживает неудачные попытки аутентификации в логах ReplyX
# и блокирует IP адреса при множественных неудачных попытках

[Definition]

# Паттерн для обнаружения неудачных попыток входа
# Формат лога: YYYY-MM-DD HH:MM:SS,mmm | WARNING | user_id | user_login | failed | {...}
failregex = ^.*\|\s*WARNING\s*\|\s*\w*\s*\|\s*user_login\s*\|\s*failed\s*\|.*"ip_address":\s*"<HOST>".*$

# Паттерн для обнаружения попыток доступа к защищенным эндпоинтам без авторизации
            ^.*\|\s*WARNING\s*\|\s*\w*\s*\|\s*unauthorized_access\s*\|\s*failed\s*\|.*"ip_address":\s*"<HOST>".*$

# Паттерн для обнаружения подозрительной активности по API
            ^.*\|\s*ERROR\s*\|\s*\w*\s*\|\s*api_abuse\s*\|\s*failed\s*\|.*"ip_address":\s*"<HOST>".*$

# Паттерн для обнаружения CSRF атак
            ^.*\|\s*WARNING\s*\|\s*\w*\s*\|\s*csrf_violation\s*\|\s*failed\s*\|.*"ip_address":\s*"<HOST>".*$

# Паттерн для обнаружения попыток SQL инъекций (если такие логируются)
            ^.*\|\s*ERROR\s*\|\s*\w*\s*\|\s*sql_injection_attempt\s*\|\s*failed\s*\|.*"ip_address":\s*"<HOST>".*$

# Паттерн для обнаружения попыток загрузки вредоносных файлов
            ^.*\|\s*WARNING\s*\|\s*\w*\s*\|\s*malicious_file_upload\s*\|\s*failed\s*\|.*"ip_address":\s*"<HOST>".*$

# Паттерн для обнаружения превышения rate limit
            ^.*\|\s*WARNING\s*\|\s*\w*\s*\|\s*rate_limit_exceeded\s*\|\s*failed\s*\|.*"ip_address":\s*"<HOST>".*$

# Паттерн для FastAPI/uvicorn логов с 401/403 статусами
            ^.*\s+<HOST>\s+.*\s+(401|403)\s+.*$

# Паттерн для nginx логов (если используется)
            ^<HOST>\s+.*\s+\"(GET|POST|PUT|DELETE|PATCH)\s+.*\s+(401|403|404)\s+.*$

# Игнорировать успешные операции
ignoreregex = ^.*\|\s*INFO\s*\|\s*\w*\s*\|\s*user_login\s*\|\s*success\s*\|.*$
              ^.*\s+<HOST>\s+.*\s+200\s+.*$
              ^.*\s+<HOST>\s+.*\s+201\s+.*$

# Параметры таймингов для анализа логов
datepattern = ^%%Y-%%m-%%d %%H:%%M:%%S

[Init]
maxlines = 1