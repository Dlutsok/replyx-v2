#!/bin/bash

# Production startup script for ChatAI Backend
echo "üöÄ Starting ChatAI Backend in production mode..."

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
export PYTHONPATH=/app
export ENVIRONMENT=production

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üì¶ Installing Python dependencies..."
if [ "$SKIP_PIP_INSTALL" = "1" ] || [ "$SKIP_PIP_INSTALL" = "true" ]; then
  echo "‚è≠Ô∏è  SKIP_PIP_INSTALL is set, skipping pip install"
else
export PIP_DISABLE_PIP_VERSION_CHECK=1
unset HTTP_PROXY HTTPS_PROXY NO_PROXY AI_PROXY_URL

PIP_OPTS="--no-cache-dir --default-timeout=120 --progress-bar off --retries 7"
echo "‚¨ÜÔ∏è  Upgrading pip/setuptools/wheel first..."
python3 -m pip install $PIP_OPTS --upgrade pip setuptools wheel || true
install_ok=false
for attempt in 1 2 3; do
  echo "üì¶ pip install attempt $attempt..."
  if pip install $PIP_OPTS -r requirements.txt; then
    install_ok=true; break
  fi
  echo "‚ö†Ô∏è Pip failed (attempt $attempt), retrying in 5s..."; sleep 5
done

  if [ "$install_ok" != true ]; then
    echo "‚ùå Failed to install Python dependencies. Exiting." >&2
    exit 1
  fi
fi

# –û–∂–∏–¥–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ PostgreSQL
echo "‚è≥ Waiting for PostgreSQL to be ready..."
PYWAIT="\
import os, time
import psycopg2
host=os.getenv('DB_HOST','db')
port=int(os.getenv('DB_PORT','5432'))
name=os.getenv('DB_NAME','chatai_production')
user=os.getenv('DB_USER','chatai')
password=os.getenv('DB_PASSWORD','')
for i in range(60):
  try:
    psycopg2.connect(host=host, port=port, dbname=name, user=user, password=password).close()
    print('‚úÖ PostgreSQL is ready')
    break
  except Exception as e:
    print(f'‚è≥ Waiting PostgreSQL... ({i+1}/60) {e}')
    time.sleep(2)
"
python3 -c "$PYWAIT"

# –ú–∏–≥—Ä–∞—Ü–∏–∏ Alembic
echo "üì¶ Running Alembic migrations..."
# –§–æ—Ä–º–∏—Ä—É–µ–º DATABASE_URL –¥–ª—è Alembic –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
DB_HOST=${DB_HOST:-db}
DB_PORT=${DB_PORT:-5432}
DB_NAME=${DB_NAME:-chatai_production}
DB_USER=${DB_USER:-chatai}
DB_PASSWORD=${DB_PASSWORD:-}
DB_SSL_MODE=${DB_SSL_MODE:-disable}

if [ -n "$DB_PASSWORD" ]; then
  export DATABASE_URL="postgresql+psycopg2://$DB_USER:$DB_PASSWORD@$DB_HOST:$DB_PORT/$DB_NAME?sslmode=$DB_SSL_MODE"
else
  export DATABASE_URL="postgresql+psycopg2://$DB_USER@$DB_HOST:$DB_PORT/$DB_NAME?sslmode=$DB_SSL_MODE"
fi

alembic upgrade head || {
  echo "‚ö†Ô∏è Alembic failed, retrying in 5s..."; sleep 5; alembic upgrade head;
}

# –ó–∞–ø—É—Å–∫ –±–µ–∑ reload –¥–ª—è production
exec python3 -m uvicorn main:app \
  --host 0.0.0.0 \
  --port 8000 \
  --workers 4 \
  --log-level info \
  --access-log