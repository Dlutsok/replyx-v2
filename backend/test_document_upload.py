#!/usr/bin/env python3
"""
–ü—Ä—è–º–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ S3
"""
import tempfile
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

from services.s3_storage_service import get_s3_service

def test_document_upload():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º API"""
    print("üì§ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ S3...")

    # –ü–æ–ª—É—á–∞–µ–º S3 —Å–µ—Ä–≤–∏—Å
    s3_service = get_s3_service()
    if not s3_service:
        print("‚ùå S3 —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        return False

    print("‚úÖ S3 —Å–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
    test_content = """–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ Timeweb Cloud Storage.

–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞:
1. –¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ UTF-8
3. –ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç

–î–∞—Ç–∞: 2025-09-15
–¶–µ–ª—å: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ S3 —Å API –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ ReplyX
"""

    content_bytes = test_content.encode('utf-8')
    original_filename = "test_document_s3.txt"
    user_id = 1  # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å

    try:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
        secure_filename = s3_service.generate_secure_filename(
            user_id=user_id,
            original_filename=original_filename,
            content=content_bytes
        )
        print(f"üîí –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–º—è: {secure_filename}")

        # –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á –æ–±—ä–µ–∫—Ç–∞
        object_key = s3_service.get_user_object_key(
            user_id,
            secure_filename,
            "documents"
        )
        print(f"üóÇÔ∏è –ö–ª—é—á –æ–±—ä–µ–∫—Ç–∞: {object_key}")

        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª (–∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–∏—Å—ã –≤–º–µ—Å—Ç–æ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–π –≤ –∫–ª—é—á–∞—Ö –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö)
        upload_result = s3_service.upload_file(
            file_content=content_bytes,
            object_key=object_key,
            content_type="text/plain",
            metadata={
                'user-id': str(user_id),
                'original-filename': original_filename,
                'file-type': 'document',
                'test': 'true'
            }
        )

        if upload_result.get('success'):
            print("‚úÖ –î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"   üìÑ –ò–º—è —Ñ–∞–π–ª–∞: {secure_filename}")
            print(f"   üîó URL: {upload_result.get('url')}")
            print(f"   üìè –†–∞–∑–º–µ—Ä: {upload_result.get('size')} –±–∞–π—Ç")
            print(f"   üè∑Ô∏è MIME: {upload_result.get('content_type')}")

            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
            print("\nüì• –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ...")
            downloaded_content = s3_service.download_file(object_key)

            if downloaded_content:
                downloaded_text = downloaded_content.decode('utf-8')
                if downloaded_text == test_content:
                    print("‚úÖ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç!")
                else:
                    print("‚ùå –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç")
                    print(f"–û–∂–∏–¥–∞–ª–æ—Å—å: {len(test_content)} —Å–∏–º–≤–æ–ª–æ–≤")
                    print(f"–ü–æ–ª—É—á–µ–Ω–æ: {len(downloaded_text)} —Å–∏–º–≤–æ–ª–æ–≤")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª")

            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
            print("\nüìã –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ...")
            file_info = s3_service.get_file_info(object_key)
            if file_info:
                print("‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞:")
                print(f"   üìè –†–∞–∑–º–µ—Ä: {file_info.get('size')} –±–∞–π—Ç")
                print(f"   üìÖ –ò–∑–º–µ–Ω–µ–Ω: {file_info.get('last_modified')}")
                print(f"   üè∑Ô∏è ETag: {file_info.get('etag')}")

            # –°–æ–∑–¥–∞–µ–º presigned URL
            print("\nüîó –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É...")
            presigned_url = s3_service.generate_presigned_url(object_key, expiration=3600)
            if presigned_url:
                print(f"‚úÖ –í—Ä–µ–º–µ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ (–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ 1 —á–∞—Å)")
                print(f"   üîó URL: {presigned_url[:100]}...")

            # –û—á–∏—Å—Ç–∫–∞ - —É–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
            print("\nüóëÔ∏è –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª...")
            if s3_service.delete_file(object_key):
                print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")
            else:
                print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª")

            return True

        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {upload_result.get('error')}")
            return False

    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ: {e}")
        return False

def test_user_file_listing():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print("\nüìÇ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤...")

    s3_service = get_s3_service()
    if not s3_service:
        print("‚ùå S3 —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        return

    user_id = 1

    # –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
    test_files = [
        ("test_doc1.txt", "documents", "–¢–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç 1"),
        ("test_icon1.png", "widget-icons", b"fake png data"),
        ("test_avatar.jpg", "avatars", b"fake jpg data")
    ]

    uploaded_keys = []

    try:
        print("üì§ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã...")
        for filename, file_type, content in test_files:
            if isinstance(content, str):
                content = content.encode('utf-8')

            secure_filename = s3_service.generate_secure_filename(user_id, filename, content)
            object_key = s3_service.get_user_object_key(user_id, secure_filename, file_type)

            result = s3_service.upload_file(content, object_key, "text/plain")
            if result.get('success'):
                uploaded_keys.append(object_key)
                print(f"   ‚úÖ {filename} ‚Üí {file_type}/")

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print(f"\nüìã –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}:")
        all_files = s3_service.list_user_files(user_id)
        for file_info in all_files:
            print(f"   üìÑ {file_info['filename']} ({file_info['file_type']}) - {file_info['size']} –±–∞–π—Ç")

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        print(f"\nüìã –¢–æ–ª—å–∫–æ –¥–æ–∫—É–º–µ–Ω—Ç—ã:")
        documents = s3_service.list_user_files(user_id, "documents")
        for doc in documents:
            print(f"   üìÑ {doc['filename']} - {doc['size']} –±–∞–π—Ç")

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∫–æ–Ω–æ–∫
        print(f"\nüìã –¢–æ–ª—å–∫–æ –∏–∫–æ–Ω–∫–∏ –≤–∏–¥–∂–µ—Ç–æ–≤:")
        icons = s3_service.list_user_files(user_id, "widget-icons")
        for icon in icons:
            print(f"   üé® {icon['filename']} - {icon['size']} –±–∞–π—Ç")

    finally:
        # –û—á–∏—Å—Ç–∫–∞
        print("\nüóëÔ∏è –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã...")
        for key in uploaded_keys:
            if s3_service.delete_file(key):
                print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω {key}")


def main():
    print("üß™ –ü—Ä—è–º–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ S3 –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
    print("=" * 60)

    # –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    success = test_document_upload()

    if success:
        # –¢–µ—Å—Ç 2: –†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
        test_user_file_listing()

        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã S3 –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ Timeweb Cloud Storage –≥–æ—Ç–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ ReplyX")
    else:
        print("\n‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é S3.")

if __name__ == "__main__":
    main()