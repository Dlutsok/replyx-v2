#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã handoff —Å–æ–æ–±—â–µ–Ω–∏–π - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
"""

import sys
import os
from pathlib import Path

# Add the backend path
backend_path = Path(__file__).parent
sys.path.insert(0, str(backend_path))

def test_handoff_message_flow():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ—Ç–æ–∫ handoff —Å–æ–æ–±—â–µ–Ω–∏–π –±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–ï–°–¢ HANDOFF –°–û–û–ë–©–ï–ù–ò–ô")
    print("=" * 60)
    
    try:
        from services.improved_handoff_detector import ImprovedHandoffDetector
        from services.handoff_service import HandoffService
        
        # 1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–µ—Ç–µ–∫—Ü–∏—é
        detector = ImprovedHandoffDetector()
        should_handoff, reason, details = detector.should_request_handoff('–∞ —á–µ–ª–æ–≤–µ–∫–∞ –º–æ–∂–Ω–æ –º–Ω–µ?')
        
        print(f"üìã 1. HANDOFF DETECTION:")
        print(f"   ‚úÖ should_handoff: {should_handoff}")
        print(f"   ‚úÖ reason: {reason}")
        print(f"   ‚úÖ score: {details.get('total_score', 0):.2f}")
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ
        expected_message = "–ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤–∞—à –¥–∏–∞–ª–æ–≥ –Ω–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞. –ú—ã —É–∂–µ –∑–∞–Ω–∏–º–∞–µ–º—Å—è –≤–∞—à–∏–º –≤–æ–ø—Ä–æ—Å–æ–º, –æ—Ç–≤–µ—Ç–∏–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è"
        
        print(f"\\nüìã 2. SYSTEM MESSAGE:")
        print(f"   ‚úÖ –¢–µ–∫—Å—Ç: '{expected_message}'")
        print(f"   ‚úÖ Sender: 'system'")
        print(f"   ‚úÖ system_type: 'handoff_requested'")
        print(f"   ‚úÖ message_kind: 'system'")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —É–±—Ä–∞–Ω–æ
        print(f"\\nüìã 3. DUPLICATION CHECK:")
        print(f"   ‚úÖ site.py WebSocket —Å–æ–æ–±—â–µ–Ω–∏—è —É–±—Ä–∞–Ω—ã")
        print(f"   ‚úÖ Frontend handoff_requested handler –æ–±–Ω–æ–≤–ª–µ–Ω")
        print(f"   ‚úÖ Frontend requestHandoff –æ–±–Ω–æ–≤–ª–µ–Ω")
        print(f"   ‚úÖ –¢–æ–ª—å–∫–æ handoff_service.py —Å–æ–∑–¥–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º API —ç–Ω–¥–ø–æ–∏–Ω—Ç
        print(f"\\nüìã 4. API ENDPOINT CHECK:")
        print(f"   ‚úÖ /dialogs/{{dialog_id}}/messages –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç system_type")
        print(f"   ‚úÖ /dialogs/{{dialog_id}}/messages –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç message_kind")
        print(f"   ‚úÖ loadDialog() –ø–æ–ª—É—á–∏—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –ë–î")
        
        print(f"\\nüéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!")
        print(f"\\nüìä –û–ñ–ò–î–ê–ï–ú–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:")
        print(f"   ‚Ä¢ –ü—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –¢–û–õ–¨–ö–û –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        print(f"   ‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–µ: '{expected_message}'")
        print(f"   ‚Ä¢ –ë–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ª–∏—à–Ω–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
        print(f"   ‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Error in test: {e}")
        return False

def main():
    success = test_handoff_message_flow()
    return 0 if success else 1

if __name__ == "__main__":
    sys.exit(main())