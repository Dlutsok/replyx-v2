#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Timeweb Cloud Storage
"""

import os
import sys
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv(dotenv_path="../.env")

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ backend –º–æ–¥—É–ª—è–º
sys.path.append('.')

from services.s3_storage_service import S3StorageService


def test_s3_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ S3 —Ö—Ä–∞–Ω–∏–ª–∏—â—É"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Timeweb Cloud Storage...")

    # –ß–∏—Ç–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ .env
    access_key = os.getenv('S3_ACCESS_KEY_ID')
    secret_key = os.getenv('S3_SECRET_ACCESS_KEY')
    bucket_name = os.getenv('S3_BUCKET_NAME')
    endpoint_url = os.getenv('S3_ENDPOINT_URL')
    region = os.getenv('S3_REGION')

    print(f"üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print(f"   Access Key: {access_key[:8]}***")
    print(f"   Bucket: {bucket_name}")
    print(f"   Endpoint: {endpoint_url}")
    print(f"   Region: {region}")
    print()

    if not all([access_key, secret_key, bucket_name]):
        print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ S3 –∑–∞–¥–∞–Ω—ã –≤ .env —Ñ–∞–π–ª–µ")
        return False

    try:
        # –°–æ–∑–¥–∞–µ–º S3 —Å–µ—Ä–≤–∏—Å
        s3_service = S3StorageService(
            access_key_id=access_key,
            secret_access_key=secret_key,
            bucket_name=bucket_name,
            endpoint_url=endpoint_url,
            region_name=region
        )

        print("‚úÖ S3 —Å–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –Ω–µ–±–æ–ª—å—à–æ–≥–æ —Ñ–∞–π–ª–∞
        test_user_id = 999
        test_content = b"Hello from ReplyX! Test file for S3 connection."
        test_filename = "test_connection.txt"

        print(f"üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª...")

        # –ü—Ä–æ—Å—Ç–æ–π –∫–ª—é—á –æ–±—ä–µ–∫—Ç–∞ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –º–µ—Ç–æ–¥–æ–≤
        object_key = "users/999/test/simple_test.txt"

        print(f"   –ö–ª—é—á –æ–±—ä–µ–∫—Ç–∞: {object_key}")

        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –±–µ–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
        upload_result = s3_service.upload_file(
            file_content=test_content,
            object_key=object_key,
            content_type="text/plain"
        )

        if upload_result.get('success'):
            print("‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"   URL: {upload_result.get('url')}")
            print(f"   –†–∞–∑–º–µ—Ä: {upload_result.get('size')} –±–∞–π—Ç")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {upload_result.get('error')}")
            return False

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
        print(f"üì• –°–∫–∞—á–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª...")

        downloaded_content = s3_service.download_file(object_key)

        if downloaded_content:
            if downloaded_content == test_content:
                print("‚úÖ –§–∞–π–ª —Å–∫–∞—á–∞–Ω –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç!")
            else:
                print("‚ö†Ô∏è –§–∞–π–ª —Å–∫–∞—á–∞–Ω, –Ω–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç")
                print(f"   –û–∂–∏–¥–∞–ª–æ—Å—å: {test_content}")
                print(f"   –ü–æ–ª—É—á–µ–Ω–æ: {downloaded_content}")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª")
            return False

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ
        print(f"üìã –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ...")

        file_info = s3_service.get_file_info(object_key)

        if file_info:
            print("‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ –ø–æ–ª—É—á–µ–Ω–∞:")
            print(f"   –†–∞–∑–º–µ—Ä: {file_info.get('size')} –±–∞–π—Ç")
            print(f"   –¢–∏–ø: {file_info.get('content_type')}")
            print(f"   ETag: {file_info.get('etag')}")
            print(f"   –ò–∑–º–µ–Ω–µ–Ω: {file_info.get('last_modified')}")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–∏
        print(f"üîó –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É...")

        presigned_url = s3_service.generate_presigned_url(object_key, expiration=300)

        if presigned_url:
            print("‚úÖ –í—Ä–µ–º–µ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞:")
            print(f"   URL: {presigned_url[:80]}...")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
        print(f"üìÇ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")

        user_files = s3_service.list_user_files(test_user_id, "test")

        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(user_files)} —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ test/")
        for file_info in user_files:
            print(f"   - {file_info['filename']} ({file_info['size']} –±–∞–π—Ç)")

        # –û—á–∏—â–∞–µ–º –∑–∞ —Å–æ–±–æ–π - —É–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        print(f"üóëÔ∏è –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª...")

        deleted = s3_service.delete_file(object_key)

        if deleted:
            print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")
        else:
            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª")

        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã S3 –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("üí° –í–∞—à–µ Timeweb Cloud Storage –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ —Å ReplyX")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ S3: {e}")
        return False


if __name__ == "__main__":
    success = test_s3_connection()
    sys.exit(0 if success else 1)