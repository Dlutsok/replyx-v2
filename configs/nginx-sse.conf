# Nginx конфигурация для поддержки Server-Sent Events (SSE)
# Добавьте эти настройки в ваш nginx.conf или site-specific конфиг

# Upstream для backend FastAPI
upstream backend_fastapi {
    server backend:8000;
    keepalive 32;
}

server {
    listen 80;
    server_name yourdomain.com;
    
    # Общие настройки
    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    keepalive_timeout 65;
    keepalive_requests 1000;
    
    # Включаем HTTP/2 для лучшей производительности SSE
    # listen 443 ssl http2;
    
    # SSE-specific location для /api/dialogs/*/events и специализированных endpoints
    location ~* ^/api/(dialogs/\d+/events|site/dialogs/\d+/events|widget/dialogs/\d+/events)$ {
        # Проксируем к FastAPI backend
        proxy_pass http://backend_fastapi;
        
        # ✅ КРИТИЧНО для SSE: отключаем буферизацию
        proxy_buffering off;
        proxy_cache off;
        
        # ✅ HTTP/1.1 с keep-alive для лучшей производительности
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # ✅ Отключаем nginx-specific буферизацию
        proxy_set_header X-Accel-Buffering no;
        
        # ✅ Большие таймауты для long-polling SSE connections
        proxy_read_timeout 3600s;        # 1 час
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        
        # ✅ Передаем правильные заголовки
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # ✅ CORS заголовки для виджетов (если нужны)
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Last-Event-ID, Cache-Control";
        add_header Access-Control-Allow-Credentials true;
        
        # ✅ Обработка preflight запросов
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, Last-Event-ID, Cache-Control";
            add_header Access-Control-Max-Age 86400;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
        
        # ✅ Логирование для отладки
        access_log /var/log/nginx/sse_access.log combined;
        error_log /var/log/nginx/sse_error.log debug;
    }
    
    # Обычные API endpoints
    location /api/ {
        proxy_pass http://backend_fastapi;
        
        # Стандартные настройки для REST API
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Таймауты для обычных API запросов
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # CORS для API
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type";
        add_header Access-Control-Allow-Credentials true;
        
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type";
            add_header Access-Control-Max-Age 86400;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }
    
    # Health check для SSE сервиса
    location /api/sse/health {
        proxy_pass http://backend_fastapi;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Быстрые таймауты для health check
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # Frontend статика (если нужно)
    location / {
        try_files $uri $uri/ /index.html;
        
        # Кэширование статических файлов
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # Виджет (если обслуживается через nginx)
    location /widget.js {
        try_files $uri =404;
        
        # Минимальное кэширование для виджета (может обновляться)
        expires 1h;
        add_header Cache-Control "public, max-age=3600";
        
        # CORS для виджетов
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET";
    }
}

# Дополнительные глобальные настройки nginx для оптимизации SSE
http {
    # ✅ Оптимизация для множественных соединений
    worker_processes auto;
    worker_connections 8192;
    
    # ✅ Оптимизация буферов
    proxy_buffering off;                    # Отключено глобально для SSE
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;
    
    # ✅ Keep-alive настройки
    keepalive_timeout 65;
    keepalive_requests 1000;
    
    # ✅ Gzip (НЕ для SSE! только для статики)
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml+rss;
    
    # ✅ Не gzip для text/event-stream!
    gzip_disable "text/event-stream";
    
    # ✅ Логирование
    log_format sse_log '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent" '
                      'rt=$request_time uct="$upstream_connect_time" '
                      'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    # ✅ Rate limiting для SSE (защита от DDoS)
    limit_req_zone $binary_remote_addr zone=sse_limit:10m rate=10r/m;
    
    server {
        # В location для SSE добавить:
        # limit_req zone=sse_limit burst=5 nodelay;
    }
}

# Мониторинг SSE соединений (опционально)
# Можно добавить в cron для мониторинга активных соединений:
# */5 * * * * netstat -an | grep :80 | grep ESTABLISHED | wc -l >> /var/log/nginx/connections.log