import { motion } from 'framer-motion';
import { FiMessageCircle, FiUser, FiClock, FiEye } from 'react-icons/fi';
import styles from './ChatWidgetCard.module.css';
import { 
  getUserDisplayName, 
  getUserSubtitle, 
  getInitials,
  getChannelType,
  toLocal 
} from '../../utils/dialogHelpers';

const ChatWidgetCard = ({ dialog, bots, onOpen, index }) => {
  const getAssistantName = () => {
    const bot = bots.find(b => b.assistant_id === dialog.assistant_id);
    return bot ? bot.assistant_name : 'AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç';
  };

  const getLastMessage = () => {
    if (dialog.last_message) return dialog.last_message;
    if (dialog.topic) return dialog.topic;
    return '–ü—Ä–∏–≤–µ—Ç! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?';
  };

  const isActive = dialog.is_taken_over !== 1 && dialog.auto_response;
  const isTakenOver = dialog.is_taken_over === 1;

  return (
    <motion.div
      className={styles.chatWidget}
      initial={{ opacity: 0, y: 20, scale: 0.9 }}
      animate={{ opacity: 1, y: 0, scale: 1 }}
      transition={{ duration: 0.3, delay: index * 0.05 }}
      whileHover={{ scale: 1.02, y: -5 }}
      onClick={() => onOpen(dialog)}
    >
      {/* –°—Ç–∞—Ç—É—Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä */}
      <div className={`${styles.statusIndicator} ${
        isTakenOver ? styles.takenOver : 
        isActive ? styles.active : styles.inactive
      }`} />

      {/* –•—ç–¥–µ—Ä –≤–∏–¥–∂–µ—Ç–∞ */}
      <div className={styles.widgetHeader}>
        <div className={styles.brandInfo}>
          <div className={styles.brandIcon}>
            <FiMessageCircle />
          </div>
          <div className={styles.brandText}>
            <span className={styles.assistantName}>
              {getAssistantName()}
            </span>
            <span className={styles.channelType}>
              {getChannelType(dialog) === 'telegram' ? 'Telegram' : '–í–µ–±-—á–∞—Ç'}
            </span>
          </div>
        </div>
        <div className={styles.headerTime}>
          {toLocal(dialog.last_message_at)}
        </div>
      </div>

      {/* –û–±–ª–∞—Å—Ç—å —á–∞—Ç–∞ */}
      <div className={styles.chatArea}>
        {/* –°–æ–æ–±—â–µ–Ω–∏—è */}
        <div className={styles.messagesContainer}>
          {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
          <div className={styles.messageGroup}>
            <div className={styles.userMessage}>
              <div className={styles.messageAvatar}>
                {getInitials(dialog)}
              </div>
              <div className={styles.messageBubble + ' ' + styles.userBubble}>
                {getLastMessage().slice(0, 50)}{getLastMessage().length > 50 ? '...' : ''}
              </div>
            </div>
          </div>

          {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ */}
          <div className={styles.messageGroup}>
            <div className={styles.assistantMessage}>
              <div className={styles.messageAvatar + ' ' + styles.assistantAvatar}>
                ü§ñ
              </div>
              <div className={styles.messageBubble + ' ' + styles.assistantBubble}>
                {isTakenOver ? '–î–∏–∞–ª–æ–≥ –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º' : 
                 isActive ? '–û—Ç–ª–∏—á–Ω–æ! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?' : 
                 '–î–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à—ë–Ω'}
              </div>
            </div>
          </div>
        </div>

        {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ (–¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ) */}
        <div className={styles.inputArea}>
          <div className={styles.inputField}>
            <span className={styles.inputPlaceholder}>–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...</span>
          </div>
          <div className={styles.sendButton}>
            <FiMessageCircle />
          </div>
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */}
      <div className={styles.userInfo}>
        <div className={styles.userDetails}>
          <FiUser className={styles.userIcon} />
          <div className={styles.userText}>
            <div className={styles.userName}>{getUserDisplayName(dialog)}</div>
            <div className={styles.userSubtitle}>{getUserSubtitle(dialog)}</div>
          </div>
        </div>
        <div className={styles.cardActions}>
          <motion.button
            className={styles.viewButton}
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            onClick={(e) => {
              e.stopPropagation();
              onOpen(dialog);
            }}
          >
            <FiEye />
            <span>–û—Ç–∫—Ä—ã—Ç—å</span>
          </motion.button>
        </div>
      </div>

      {/* –°—Ç–∞—Ç—É—Å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ */}
      <div className={styles.statusBar}>
        <div className={styles.statusText}>
          {isTakenOver ? (
            <span className={styles.statusTaken}>üë®‚Äçüíº –î–∏–∞–ª–æ–≥ –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω</span>
          ) : isActive ? (
            <span className={styles.statusActive}>üü¢ –ê–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥</span>
          ) : (
            <span className={styles.statusInactive}>‚è∏Ô∏è –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–π</span>
          )}
        </div>
        <div className={styles.lastActivity}>
          <FiClock />
          <span>{new Date(dialog.last_message_at).toLocaleDateString()}</span>
        </div>
      </div>
    </motion.div>
  );
};

export default ChatWidgetCard;