import { useState, useEffect } from 'react';
import { useRouter } from 'next/router';
import styles from '../../styles/components/OnboardingWizard.module.css';
import { 
  FiCheck, FiArrowRight, FiArrowLeft, FiX, FiUser, FiMessageSquare, 
  FiCpu, FiZap, FiTarget, FiPlay, FiStar, FiHeart, FiCoffee 
} from 'react-icons/fi';

const ONBOARDING_STEPS = [
  {
    id: 1,
    title: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ChatAI! üéâ",
    description: "–ú—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º —Å–æ–∑–¥–∞—Ç—å –≤–∞—à–µ–≥–æ –ø–µ—Ä–≤–æ–≥–æ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –∑–∞ 3 –º–∏–Ω—É—Ç—ã",
    icon: FiPlay,
    content: "welcome"
  },
  {
    id: 2,
    title: "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ",
    description: "–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à –æ–ø—ã—Ç",
    icon: FiUser,
    content: "profile"
  },
  {
    id: 3,
    title: "–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞",
    description: "–ì–æ—Ç–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞",
    icon: FiCpu,
    content: "template"
  },
  {
    id: 4,
    title: "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ª–∏—á–Ω–æ—Å—Ç—å",
    description: "–°–¥–µ–ª–∞–π—Ç–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º",
    icon: FiHeart,
    content: "personality"
  },
  {
    id: 5,
    title: "–ì–æ—Ç–æ–≤–æ! üöÄ",
    description: "–í–∞—à AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ",
    icon: FiStar,
    content: "complete"
  }
];

const ASSISTANT_TEMPLATES = [
  {
    id: 'customer_support',
    name: '–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏',
    description: '–û—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∫–ª–∏–µ–Ω—Ç–æ–≤, —Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã',
    icon: 'üéß',
    popular: true,
    prompt: '–¢—ã ‚Äî –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –ü–æ–º–æ–≥–∞–µ—à—å –∫–ª–∏–µ–Ω—Ç–∞–º —Ä–µ—à–∞—Ç—å –∏—Ö –≤–æ–ø—Ä–æ—Å—ã –±—ã—Å—Ç—Ä–æ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ.'
  },
  {
    id: 'sales_assistant',
    name: '–ü—Ä–æ–¥–∞–∂–∏',
    description: '–ü–æ–º–æ–≥–∞–µ—Ç —Å –≤—ã–±–æ—Ä–æ–º —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ—Ç',
    icon: 'üíº',
    popular: true,
    prompt: '–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º. –ü–æ–º–æ–≥–∞–µ—à—å –∫–ª–∏–µ–Ω—Ç–∞–º –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–æ–≤–∞—Ä –∏–ª–∏ —É—Å–ª—É–≥—É.'
  },
  {
    id: 'info_assistant',
    name: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π',
    description: '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏',
    icon: '‚ÑπÔ∏è',
    prompt: '–¢—ã ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—à—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏ –∏ —É—Å–ª—É–≥–∞—Ö.'
  },
  {
    id: 'booking_assistant',
    name: '–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ',
    description: '–ü–æ–º–æ–≥–∞–µ—Ç –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥–∏',
    icon: 'üìÖ',
    prompt: '–¢—ã ‚Äî –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —É—Å–ª—É–≥–∏. –ü–æ–º–æ–≥–∞–µ—à—å –∫–ª–∏–µ–Ω—Ç–∞–º –≤—ã–±—Ä–∞—Ç—å —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –∏ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —É—Å–ª—É–≥—É.'
  },
  {
    id: 'custom',
    name: '–°–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç',
    description: '–°–æ–∑–¥–∞—Ç—å —Å –Ω—É–ª—è',
    icon: '‚ö°',
    prompt: '–¢—ã ‚Äî –ø–æ–ª–µ–∑–Ω—ã–π AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –û—Ç–≤–µ—á–∞–µ—à—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥—Ä—É–∂–µ–ª—é–±–Ω–æ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ.'
  }
];

export default function OnboardingWizard({ user, onComplete, onSkip }) {
  const [currentStep, setCurrentStep] = useState(1);
  const [isAnimating, setIsAnimating] = useState(false);
  const [formData, setFormData] = useState({
    businessType: '',
    assistantName: '',
    selectedTemplate: null,
    personality: 'friendly'
  });
  const [isLoading, setIsLoading] = useState(false);
  const router = useRouter();

  // –ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –º–µ–∂–¥—É —à–∞–≥–∞–º–∏
  const goToStep = (step) => {
    if (step === currentStep) return;
    
    setIsAnimating(true);
    setTimeout(() => {
      setCurrentStep(step);
      setIsAnimating(false);
    }, 200);
  };

  const nextStep = () => {
    if (currentStep < ONBOARDING_STEPS.length) {
      goToStep(currentStep + 1);
    }
  };

  const prevStep = () => {
    if (currentStep > 1) {
      goToStep(currentStep - 1);
    }
  };

  const handleTemplateSelect = (template) => {
    setFormData({ ...formData, selectedTemplate: template });
  };

  const createAssistant = async () => {
    setIsLoading(true);
    try {
      const token = localStorage.getItem('access_token');
      const response = await fetch('http://localhost:8000/api/assistants/', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${token}`
        },
        body: JSON.stringify({
          name: formData.assistantName || formData.selectedTemplate?.name || '–ú–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç',
          system_prompt: formData.selectedTemplate?.prompt || '–¢—ã ‚Äî –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ –ø–æ–ª–µ–∑–Ω—ã–π AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç.',
          ai_model: 'gpt-4o-mini'
        })
      });

      if (response.ok) {
        // –û—Ç–º–µ—á–∞–µ–º –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π
        await fetch('http://localhost:8000/api/users/onboarding/complete', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}`
          }
        });

        onComplete();
      } else {
        throw new Error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞');
      }
    } catch (error) {
      console.error('Error creating assistant:', error);
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞');
    } finally {
      setIsLoading(false);
    }
  };

  const handleComplete = () => {
    if (currentStep === ONBOARDING_STEPS.length) {
      createAssistant();
    } else {
      nextStep();
    }
  };

  const renderStepContent = () => {
    const step = ONBOARDING_STEPS.find(s => s.id === currentStep);
    
    switch (step.content) {
      case 'welcome':
        return (
          <div className={styles.welcomeContent}>
            <div className={styles.welcomeIcon}>
                              <FiPlay size={64} />
            </div>
            <h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ChatAI!</h2>
            <p>–ú—ã —Å–æ–∑–¥–∞–¥–∏–º –≤–∞—à–µ–≥–æ –ø–µ—Ä–≤–æ–≥–æ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –≤—Å–µ–≥–æ –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —à–∞–≥–æ–≤.</p>
            <div className={styles.benefitsList}>
              <div className={styles.benefit}>
                <FiZap size={20} />
                <span>–ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞ 3 –º–∏–Ω—É—Ç—ã</span>
              </div>
              <div className={styles.benefit}>
                <FiTarget size={20} />
                <span>–ì–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –¥–ª—è –≤–∞—à–µ–π —Å—Ñ–µ—Ä—ã</span>
              </div>
              <div className={styles.benefit}>
                <FiMessageSquare size={20} />
                <span>–°—Ä–∞–∑—É –≥–æ—Ç–æ–≤ –æ—Ç–≤–µ—á–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞–º</span>
              </div>
            </div>
          </div>
        );

      case 'profile':
        return (
          <div className={styles.profileContent}>
            <h2>–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–º –±–∏–∑–Ω–µ—Å–µ</h2>
            <p>–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π —à–∞–±–ª–æ–Ω –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞</p>
            
            <div className={styles.inputGroup}>
              <label>–°—Ñ–µ—Ä–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</label>
              <select 
                value={formData.businessType} 
                onChange={(e) => setFormData({...formData, businessType: e.target.value})}
                className={styles.select}
              >
                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ñ–µ—Ä—É</option>
                <option value="ecommerce">–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω</option>
                <option value="services">–£—Å–ª—É–≥–∏</option>
                <option value="education">–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</option>
                <option value="healthcare">–ú–µ–¥–∏—Ü–∏–Ω–∞</option>
                <option value="restaurant">–†–µ—Å—Ç–æ—Ä–∞–Ω/–ö–∞—Ñ–µ</option>
                <option value="beauty">–ö—Ä–∞—Å–æ—Ç–∞ –∏ –∑–¥–æ—Ä–æ–≤—å–µ</option>
                <option value="tech">IT –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏</option>
                <option value="other">–î—Ä—É–≥–æ–µ</option>
              </select>
            </div>

            <div className={styles.inputGroup}>
              <label>–ò–º—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞</label>
              <input
                type="text"
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ê–Ω–Ω–∞, –ü–æ–º–æ—â–Ω–∏–∫, –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç"
                value={formData.assistantName}
                onChange={(e) => setFormData({...formData, assistantName: e.target.value})}
                className={styles.input}
              />
            </div>
          </div>
        );

      case 'template':
        return (
          <div className={styles.templateContent}>
            <h2>–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞</h2>
            <p>–ì–æ—Ç–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞</p>
            
            <div className={styles.templatesGrid}>
              {ASSISTANT_TEMPLATES.map((template) => (
                <div
                  key={template.id}
                  className={`${styles.templateCard} ${
                    formData.selectedTemplate?.id === template.id ? styles.selected : ''
                  }`}
                  onClick={() => handleTemplateSelect(template)}
                >
                  {template.popular && <div className={styles.popularBadge}>–ü–æ–ø—É–ª—è—Ä–Ω—ã–π</div>}
                  <div className={styles.templateIcon}>{template.icon}</div>
                  <h3>{template.name}</h3>
                  <p>{template.description}</p>
                </div>
              ))}
            </div>
          </div>
        );

      case 'personality':
        return (
          <div className={styles.personalityContent}>
            <h2>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è</h2>
            <p>–ö–∞–∫ –≤–∞—à –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –æ–±—â–∞—Ç—å—Å—è —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏?</p>
            
            <div className={styles.personalityOptions}>
              <div 
                className={`${styles.personalityCard} ${
                  formData.personality === 'friendly' ? styles.selected : ''
                }`}
                onClick={() => setFormData({...formData, personality: 'friendly'})}
              >
                <FiHeart size={32} />
                <h3>–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π</h3>
                <p>–¢–µ–ø–ª–æ–µ –∏ –ª–∏—á–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ</p>
              </div>
              
              <div 
                className={`${styles.personalityCard} ${
                  formData.personality === 'professional' ? styles.selected : ''
                }`}
                onClick={() => setFormData({...formData, personality: 'professional'})}
              >
                <FiUser size={32} />
                <h3>–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π</h3>
                <p>–î–µ–ª–æ–≤–æ–π –∏ –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω—ã–π —Å—Ç–∏–ª—å</p>
              </div>
              
              <div 
                className={`${styles.personalityCard} ${
                  formData.personality === 'casual' ? styles.selected : ''
                }`}
                onClick={() => setFormData({...formData, personality: 'casual'})}
              >
                <FiCoffee size={32} />
                <h3>–ù–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π</h3>
                <p>–†–∞—Å—Å–ª–∞–±–ª–µ–Ω–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ</p>
              </div>
            </div>
          </div>
        );

      case 'complete':
        return (
          <div className={styles.completeContent}>
            <div className={styles.successIcon}>
              <FiCheck size={64} />
            </div>
            <h2>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéâ</h2>
            <p>–í–∞—à AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ</p>
            
            <div className={styles.summaryCard}>
              <h3>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞:</h3>
              <div className={styles.summaryItem}>
                <strong>–ò–º—è:</strong> {formData.assistantName || 'AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç'}
              </div>
              <div className={styles.summaryItem}>
                <strong>–®–∞–±–ª–æ–Ω:</strong> {formData.selectedTemplate?.name || '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π'}
              </div>
              <div className={styles.summaryItem}>
                <strong>–°—Ç–∏–ª—å:</strong> {formData.personality === 'friendly' ? '–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π' : 
                                          formData.personality === 'professional' ? '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π' : '–ù–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π'}
              </div>
            </div>
            
            <div className={styles.nextSteps}>
              <h4>–ß—Ç–æ –¥–∞–ª—å—à–µ?</h4>
              <ul>
                <li>–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ "–î–∏–∞–ª–æ–≥–∏"</li>
                <li>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –æ–±—É—á–µ–Ω–∏—è</li>
                <li>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞–º–∏</li>
              </ul>
            </div>
          </div>
        );

      default:
        return null;
    }
  };

  return (
    <div className={styles.onboardingOverlay}>
      <div className={styles.onboardingContainer}>
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º */}
        <div className={styles.header}>
          <div className={styles.progress}>
            <div className={styles.progressSteps}>
              {ONBOARDING_STEPS.map((step, index) => (
                <div 
                  key={step.id}
                  className={`${styles.progressStep} ${
                    step.id <= currentStep ? styles.completed : ''
                  } ${step.id === currentStep ? styles.current : ''}`}
                >
                  <div className={styles.stepNumber}>
                    {step.id < currentStep ? <FiCheck size={16} /> : step.id}
                  </div>
                  <span className={styles.stepTitle}>{step.title}</span>
                </div>
              ))}
            </div>
            <div 
              className={styles.progressBar}
              style={{ width: `${(currentStep / ONBOARDING_STEPS.length) * 100}%` }}
            />
          </div>
          
          <button 
            className={styles.skipButton}
            onClick={onSkip}
          >
            <FiX size={20} />
            –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å
          </button>
        </div>

        {/* –ö–æ–Ω—Ç–µ–Ω—Ç —à–∞–≥–∞ */}
        <div className={`${styles.stepContent} ${isAnimating ? styles.animating : ''}`}>
          {renderStepContent()}
        </div>

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
        <div className={styles.navigation}>
          {currentStep > 1 && (
            <button 
              className={styles.backButton}
              onClick={prevStep}
            >
              <FiArrowLeft size={20} />
              –ù–∞–∑–∞–¥
            </button>
          )}
          
          <div className={styles.spacer} />
          
          <button 
            className={styles.nextButton}
            onClick={handleComplete}
            disabled={isLoading || (currentStep === 3 && !formData.selectedTemplate)}
          >
            {isLoading ? (
              '–°–æ–∑–¥–∞–µ–º...'
            ) : currentStep === ONBOARDING_STEPS.length ? (
              '–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É'
            ) : (
              <>
                –î–∞–ª–µ–µ
                <FiArrowRight size={20} />
              </>
            )}
          </button>
        </div>
      </div>
    </div>
  );
} 