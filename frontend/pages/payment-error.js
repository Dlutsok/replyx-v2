import React, { useEffect, useState } from 'react';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { useAuth } from '@/hooks';
import { FiX, FiArrowLeft, FiCreditCard, FiAlertCircle } from 'react-icons/fi';

export default function PaymentError() {
  const router = useRouter();
  const { user } = useAuth();
  const [isProcessing, setIsProcessing] = useState(true);
  const [errorDetails, setErrorDetails] = useState(null);
  
  useEffect(() => {
    const processPaymentError = async () => {
      try {
        const urlParams = new URLSearchParams(window.location.search);
        const orderId = urlParams.get('OrderId') || urlParams.get('order');
        const errorCode = urlParams.get('ErrorCode');
        const errorMessage = urlParams.get('Message') || urlParams.get('ErrorMessage');
        
        setErrorDetails({
          orderId,
          errorCode,
          errorMessage: errorMessage || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
        });

        // –£–≤–µ–¥–æ–º–ª—è–µ–º backend –æ –Ω–µ—É–¥–∞—á–Ω–æ–º –ø–ª–∞—Ç–µ–∂–µ
        if (orderId) {
          const formData = new FormData();
          formData.append('order_id', orderId);
          formData.append('success', false);
          formData.append('error_message', errorMessage || `–ö–æ–¥ –æ—à–∏–±–∫–∏: ${errorCode}`);

          const headers = {};
          const token = localStorage.getItem('token');
          if (token) {
            headers['Authorization'] = `Bearer ${token}`;
          }

          const response = await fetch('/api/payments/complete-payment', {
            method: 'POST',
            body: formData,
            headers: headers
          });

          if (response.ok) {
          }
        }

      } catch (error) {
      } finally {
        setIsProcessing(false);
      }
    };

    if (router.isReady) {
      processPaymentError();
    }
  }, [router.isReady]);

  const handleTryAgain = () => {
    router.push('/balance');
  };

  const handleGoToDashboard = () => {
    router.push('/dashboard');
  };

  const getErrorMessage = () => {
    if (!errorDetails) return '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–∞—Ç–µ–∂–∞';
    
    const { errorCode, errorMessage } = errorDetails;
    
    // –†–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ–º —á–∞—Å—Ç—ã–µ –∫–æ–¥—ã –æ—à–∏–±–æ–∫ –¢-–ë–∞–Ω–∫
    const commonErrors = {
      '101': '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –∫–∞—Ä—Ç–µ',
      '116': '–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –Ω–∞ –∫–∞—Ä—Ç–µ',
      '117': '–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ CVV',
      '206': '–ö–∞—Ä—Ç–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –±–∞–Ω–∫–æ–º',
      '300': '–ü–ª–∞—Ç–µ–∂ –æ—Ç–∫–ª–æ–Ω–µ–Ω –±–∞–Ω–∫–æ–º',
      '9999': '–°–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ'
    };
    
    return commonErrors[errorCode] || errorMessage || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
  };

  return (
    <>
      <Head>
        <title>–û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã - ReplyX</title>
        <meta name="description" content="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–∞—Ç–µ–∂–∞" />
      </Head>

      <div className="min-h-screen bg-gradient-to-br from-red-50 to-orange-50 flex items-center justify-center p-4">
        <div className="max-w-md w-full bg-white rounded-2xl shadow-xl p-8 text-center">
          {isProcessing ? (
            <>
              <div className="w-16 h-16 mx-auto mb-6 relative">
                <div className="w-16 h-16 border-4 border-red-200 border-t-red-600 rounded-full animate-spin"></div>
              </div>
              <h1 className="text-xl font-semibold text-gray-900 mb-2">
                –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...
              </h1>
              <p className="text-gray-600 mb-6">
                –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏—á–∏–Ω—É –æ—à–∏–±–∫–∏
              </p>
            </>
          ) : (
            <>
              <div className="w-16 h-16 mx-auto mb-6 bg-red-100 rounded-full flex items-center justify-center">
                <FiX className="w-8 h-8 text-red-600" />
              </div>
              
              <h1 className="text-2xl font-bold text-gray-900 mb-2">
                –ü–ª–∞—Ç–µ–∂ –Ω–µ –ø—Ä–æ—à–µ–ª
              </h1>
              
              <div className="bg-red-50 rounded-xl p-4 mb-6 text-left">
                <div className="flex items-start gap-3">
                  <FiAlertCircle className="w-5 h-5 text-red-600 mt-0.5 flex-shrink-0" />
                  <div>
                    <p className="text-sm font-medium text-red-800 mb-1">
                      –ü—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏:
                    </p>
                    <p className="text-sm text-red-700">
                      {getErrorMessage()}
                    </p>
                    {errorDetails?.errorCode && (
                      <p className="text-xs text-red-600 mt-2">
                        –ö–æ–¥ –æ—à–∏–±–∫–∏: {errorDetails.errorCode}
                      </p>
                    )}
                    {errorDetails?.orderId && (
                      <p className="text-xs text-red-600">
                        –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: {errorDetails.orderId}
                      </p>
                    )}
                  </div>
                </div>
              </div>

              <div className="bg-blue-50 rounded-xl p-4 mb-6">
                <p className="text-sm text-blue-800 font-medium mb-1">
                  üí° –ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:
                </p>
                <ul className="text-xs text-blue-700 text-left space-y-1">
                  <li>‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã</li>
                  <li>‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤</li>
                  <li>‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é –∫–∞—Ä—Ç—É</li>
                  <li>‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –≤–∞—à –±–∞–Ω–∫</li>
                </ul>
              </div>

              <div className="space-y-3">
                <button
                  onClick={handleTryAgain}
                  className="w-full bg-[#6334E5] text-white py-3 px-6 rounded-xl hover:bg-[#5028c2] transition-colors flex items-center justify-center gap-2"
                >
                  <FiCreditCard className="w-5 h-5" />
                  –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                </button>
                
                <button
                  onClick={handleGoToDashboard}
                  className="w-full bg-gray-100 text-gray-700 py-3 px-6 rounded-xl hover:bg-gray-200 transition-colors flex items-center justify-center gap-2"
                >
                  <FiArrowLeft className="w-5 h-5" />
                  –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–±–∏–Ω–µ—Ç
                </button>
              </div>

              <p className="text-xs text-gray-500 mt-6">
                –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É ReplyX
              </p>
            </>
          )}
        </div>
      </div>
    </>
  );
}