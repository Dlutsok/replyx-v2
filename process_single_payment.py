#!/usr/bin/env python3
import sys
sys.path.append('/Users/dan/Documents/chatAI/MVP 13/backend')

from database.connection import SessionLocal
from database.models import Payment
from services.balance_service import BalanceService
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø–ª–∞—Ç–µ–∂
order_id = "replyx_1757513300_fecbd086"  # 4444 —Ä—É–±

db = SessionLocal()
try:
    payment = db.query(Payment).filter(Payment.order_id == order_id).first()
    
    if not payment:
        print(f"‚ùå –ü–ª–∞—Ç–µ–∂ {order_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î")
        exit(1)
    
    print(f"üí∞ –ù–∞–π–¥–µ–Ω –ø–ª–∞—Ç–µ–∂ {order_id}:")
    print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {payment.user_id}")
    print(f"   –°—É–º–º–∞: {payment.amount} —Ä—É–±")
    print(f"   –°—Ç–∞—Ç—É—Å: {payment.status}")
    
    if payment.status == 'success':
        print(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!")
        exit(0)
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º
    balance_service = BalanceService(db)
    
    transaction = balance_service.top_up_balance(
        user_id=payment.user_id,
        amount=float(payment.amount),
        description=f"üöÄ –°—Ä–æ—á–Ω–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –¢-–ë–∞–Ω–∫ (–∑–∞–∫–∞–∑ {payment.order_id})"
    )
    
    payment.status = 'success'
    db.commit()
    
    print(f"üéâ –ü–õ–ê–¢–ï–ñ –û–ë–†–ê–ë–û–¢–ê–ù!")
    print(f"   –ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {payment.amount} —Ä—É–±")
    print(f"   ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {transaction.id}")
    
finally:
    db.close()