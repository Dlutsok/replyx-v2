#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–∞
"""
import sys
from pathlib import Path
sys.path.append(str(Path(__file__).parent))

from sqlalchemy.orm import sessionmaker
from sqlalchemy import create_engine
from core.app_config import DATABASE_URL
from database.models import User, Dialog, DialogMessage, Document, UserKnowledge, KnowledgeEmbedding, BalanceTransaction, Assistant, DialogFeedback, DialogRating, MessageRating, BotInstance, AITokenUsage, ReferralCode, Referral, PromoCodeUsage, UserBalance
import os
from dotenv import load_dotenv

load_dotenv()

def cleanup_users():
    """–£–¥–∞–ª—è–µ—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–∞"""
    
    print("üßπ –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–∞)")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    engine = create_engine(DATABASE_URL)
    SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
    db = SessionLocal()
    
    try:
        # –ù–∞—Ö–æ–¥–∏–º –∞–¥–º–∏–Ω–∞
        admin_emails = ['admin@example.com', 'admin@replyx.ru', 'moroooz13@ya.ru']
        
        admin_users = []
        for email in admin_emails:
            admin = db.query(User).filter(User.email == email.lower()).first()
            if admin:
                admin_users.append(admin)
                print(f"üëë –ù–∞–π–¥–µ–Ω –∞–¥–º–∏–Ω: {admin.email} (ID: {admin.id})")
        
        if not admin_users:
            print("‚ùå –ê–¥–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω! –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
            return False
        
        admin_ids = [admin.id for admin in admin_users]
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–æ–≤
        users_to_delete = db.query(User).filter(~User.id.in_(admin_ids)).all()
        
        if not users_to_delete:
            print("‚úÖ –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (–∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–æ–≤)")
            return True
        
        print(f"\nüìä –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: {len(users_to_delete)}")
        
        user_ids_to_delete = [user.id for user in users_to_delete]
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        for user in users_to_delete[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã—Ö 10
            print(f"   - {user.email} (ID: {user.id})")
        
        if len(users_to_delete) > 10:
            print(f"   ... –∏ –µ—â–µ {len(users_to_delete) - 10} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        import sys
        if len(sys.argv) > 1 and sys.argv[1] == '--confirm':
            confirm = 'yes'
            print(f"\n‚ö†Ô∏è  –£–¥–∞–ª—è–µ–º {len(users_to_delete)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∞–≤—Ç–æ–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ)...")
        else:
            confirm = input(f"\n‚ö†Ô∏è  –£–¥–∞–ª–∏—Ç—å {len(users_to_delete)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π? (yes/no): ")
        
        if confirm.lower() != 'yes':
            print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
            return False
        
        print("\nüóëÔ∏è  –ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ...")
        
        # –£–¥–∞–ª—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
        
        # 1. –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–æ–≤
        deleted_messages = db.query(DialogMessage).filter(
            DialogMessage.dialog_id.in_(
                db.query(Dialog.id).filter(Dialog.user_id.in_(user_ids_to_delete))
            )
        ).delete(synchronize_session=False)
        print(f"   üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {deleted_messages}")
        
        # 2. –£–¥–∞–ª—è–µ–º –¥–∏–∞–ª–æ–≥–∏
        deleted_dialogs = db.query(Dialog).filter(Dialog.user_id.in_(user_ids_to_delete)).delete(synchronize_session=False)
        print(f"   üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ –¥–∏–∞–ª–æ–≥–æ–≤: {deleted_dialogs}")
        
        # 3. –£–¥–∞–ª—è–µ–º embeddings –∑–Ω–∞–Ω–∏–π (–ø–æ doc_id, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ —Å–≤—è–∑–∞–Ω—ã —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏)
        deleted_embeddings = db.query(KnowledgeEmbedding).filter(
            KnowledgeEmbedding.user_id.in_(user_ids_to_delete)
        ).delete(synchronize_session=False)
        print(f"   üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ embeddings: {deleted_embeddings}")
        
        # 4. –£–¥–∞–ª—è–µ–º –∑–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        deleted_knowledge = db.query(UserKnowledge).filter(UserKnowledge.user_id.in_(user_ids_to_delete)).delete(synchronize_session=False)
        print(f"   üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ –∑–Ω–∞–Ω–∏–π: {deleted_knowledge}")
        
        # 5. –£–¥–∞–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã
        deleted_documents = db.query(Document).filter(Document.user_id.in_(user_ids_to_delete)).delete(synchronize_session=False)
        print(f"   üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {deleted_documents}")
        
        # 6. –£–¥–∞–ª—è–µ–º —Ä–µ–π—Ç–∏–Ω–≥–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        deleted_message_ratings = db.query(MessageRating).filter(
            MessageRating.message_id.in_(
                db.query(DialogMessage.id).filter(
                    DialogMessage.dialog_id.in_(
                        db.query(Dialog.id).filter(Dialog.user_id.in_(user_ids_to_delete))
                    )
                )
            )
        ).delete(synchronize_session=False)
        print(f"   üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π: {deleted_message_ratings}")
        
        # 7. –£–¥–∞–ª—è–µ–º —Ä–µ–π—Ç–∏–Ω–≥–∏ –¥–∏–∞–ª–æ–≥–æ–≤
        deleted_dialog_ratings = db.query(DialogRating).filter(
            DialogRating.dialog_id.in_(
                db.query(Dialog.id).filter(Dialog.user_id.in_(user_ids_to_delete))
            )
        ).delete(synchronize_session=False)
        print(f"   üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ –¥–∏–∞–ª–æ–≥–æ–≤: {deleted_dialog_ratings}")
        
        # 8. –£–¥–∞–ª—è–µ–º –æ—Ç–∑—ã–≤—ã –æ –¥–∏–∞–ª–æ–≥–∞—Ö
        deleted_feedback = db.query(DialogFeedback).filter(
            DialogFeedback.dialog_id.in_(
                db.query(Dialog.id).filter(Dialog.user_id.in_(user_ids_to_delete))
            )
        ).delete(synchronize_session=False)
        print(f"   üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ –æ—Ç–∑—ã–≤–æ–≤: {deleted_feedback}")
        
        # 9. –£–¥–∞–ª—è–µ–º –±–æ—Ç—ã (bot instances) –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤
        deleted_bots = db.query(BotInstance).filter(BotInstance.user_id.in_(user_ids_to_delete)).delete(synchronize_session=False)
        print(f"   üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ –±–æ—Ç–æ–≤: {deleted_bots}")
        
        # 10. –£–¥–∞–ª—è–µ–º AI token usage –∑–∞–ø–∏—Å–∏
        deleted_ai_usage = db.query(AITokenUsage).filter(AITokenUsage.user_id.in_(user_ids_to_delete)).delete(synchronize_session=False)
        print(f"   üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π AI usage: {deleted_ai_usage}")
        
        # 11. –£–¥–∞–ª—è–µ–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        deleted_assistants = db.query(Assistant).filter(Assistant.user_id.in_(user_ids_to_delete)).delete(synchronize_session=False)
        print(f"   üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤: {deleted_assistants}")
        
        # 12. –£–¥–∞–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –±–∞–ª–∞–Ω—Å–∞
        deleted_transactions = db.query(BalanceTransaction).filter(BalanceTransaction.user_id.in_(user_ids_to_delete)).delete(synchronize_session=False)
        print(f"   üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {deleted_transactions}")
        
        # 13. –£–¥–∞–ª—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
        deleted_promo_usage = db.query(PromoCodeUsage).filter(PromoCodeUsage.user_id.in_(user_ids_to_delete)).delete(synchronize_session=False)
        print(f"   üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤: {deleted_promo_usage}")
        
        # 14. –£–¥–∞–ª—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—ã (–∫–∞–∫ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞, —Ç–∞–∫ –∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã)
        deleted_referrals_made = db.query(Referral).filter(Referral.referrer_id.in_(user_ids_to_delete)).delete(synchronize_session=False)
        deleted_referrals_received = db.query(Referral).filter(Referral.referred_id.in_(user_ids_to_delete)).delete(synchronize_session=False)
        print(f"   üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ (—Å–¥–µ–ª–∞–Ω–Ω—ã—Ö/–ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö): {deleted_referrals_made}/{deleted_referrals_received}")
        
        # 15. –£–¥–∞–ª—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –∫–æ–¥—ã
        deleted_referral_codes = db.query(ReferralCode).filter(ReferralCode.user_id.in_(user_ids_to_delete)).delete(synchronize_session=False)
        print(f"   üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –∫–æ–¥–æ–≤: {deleted_referral_codes}")
        
        # 16. –£–¥–∞–ª—è–µ–º –±–∞–ª–∞–Ω—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        deleted_balances = db.query(UserBalance).filter(UserBalance.user_id.in_(user_ids_to_delete)).delete(synchronize_session=False)
        print(f"   üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ –±–∞–ª–∞–Ω—Å–æ–≤: {deleted_balances}")
        
        # 17. –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        deleted_users = db.query(User).filter(User.id.in_(user_ids_to_delete)).delete(synchronize_session=False)
        print(f"   üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {deleted_users}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        db.commit()
        
        print(f"\n‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:")
        print(f"   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {deleted_users}")
        print(f"   - –î–∏–∞–ª–æ–≥–æ–≤: {deleted_dialogs}")
        print(f"   - –°–æ–æ–±—â–µ–Ω–∏–π: {deleted_messages}")
        print(f"   - –î–æ–∫—É–º–µ–Ω—Ç–æ–≤: {deleted_documents}")
        print(f"   - –ó–Ω–∞–Ω–∏–π: {deleted_knowledge}")
        print(f"   - Embeddings: {deleted_embeddings}")
        print(f"   - –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤: {deleted_assistants}")
        print(f"   - –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {deleted_transactions}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        remaining_users = db.query(User).all()
        print(f"\nüë• –û—Å—Ç–∞–≤—à–∏–µ—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ({len(remaining_users)}):")
        for user in remaining_users:
            print(f"   - {user.email} (ID: {user.id})")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: {e}")
        db.rollback()
        return False
    finally:
        db.close()

def cleanup_redis():
    """–û—á–∏—â–∞–µ—Ç Redis –∫–µ—à"""
    try:
        import redis
        r = redis.Redis(host='localhost', port=6379, db=0)
        r.flushall()
        print("üóëÔ∏è  Redis –∫–µ—à –æ—á–∏—â–µ–Ω")
        return True
    except Exception as e:
        print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å Redis: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print()
    
    success = cleanup_users()
    
    if success:
        cleanup_redis()
        print("\nüéâ –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print("üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å backend —Å–µ—Ä–≤–µ—Ä")
        sys.exit(0)
    else:
        print("\nüí• –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1)