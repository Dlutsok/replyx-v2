#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–∏—Å—Ç–µ–º—ã
"""

import sys
import os
# Add backend directory to path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '../..'))

from database import get_db, models, SessionLocal
from core.auth import get_password_hash
from sqlalchemy.orm import Session

def create_admin_user(email: str, password: str, first_name: str = "Admin"):
    """–°–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    
    db = SessionLocal()
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        existing_user = db.query(models.User).filter(models.User.email == email).first()
        if existing_user:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å email {email} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            if existing_user.role == 'admin':
                print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
            else:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å –¥–æ admin
                existing_user.role = 'admin'
                db.commit()
                print(f"‚úÖ –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ admin")
            return
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        hashed_password = get_password_hash(password)
        
        admin_user = models.User(
            email=email,
            hashed_password=hashed_password,
            first_name=first_name,
            role='admin',  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            status='active',
            is_email_confirmed=True,  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º email —Å—Ä–∞–∑—É
            welcome_bonus_received=True  # –ù–µ –Ω—É–∂–µ–Ω –±–æ–Ω—É—Å –∞–¥–º–∏–Ω—É
        )
        
        db.add(admin_user)
        db.commit()
        db.refresh(admin_user)
        
        print(f"‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ:")
        print(f"   Email: {email}")
        print(f"   ID: {admin_user.id}")
        print(f"   Role: {admin_user.role}")
        print(f"   Status: {admin_user.status}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}")
        db.rollback()
    finally:
        db.close()

def main():
    print("üîß –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–∏—Å—Ç–µ–º—ã ReplyX")
    print("=" * 50)
    
    if len(sys.argv) != 3:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python create_admin.py <email> <password>")
        print("–ü—Ä–∏–º–µ—Ä: python create_admin.py admin@replyx.ru mypassword123")
        sys.exit(1)
    
    email = sys.argv[1]
    password = sys.argv[2]
    
    # –ë–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
    if '@' not in email:
        print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å")
        sys.exit(1)
        
    if len(password) < 8:
        print("‚ùå –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤")
        sys.exit(1)
    
    print(f"–°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å email: {email}")
    
    # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    create_admin_user(email, password)
    
    print("\nüöÄ –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:")
    print(f"   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ backend: cd backend && uvicorn main:app --reload")
    print(f"   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ frontend: cd frontend && npm run dev")
    print(f"   3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:3000/login")
    print(f"   4. –í–æ–π–¥–∏—Ç–µ —Å –¥–∞–Ω–Ω—ã–º–∏: {email} / {password}")
    print(f"   5. –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–∞–π–¥–±–∞—Ä–µ")

if __name__ == "__main__":
    main()