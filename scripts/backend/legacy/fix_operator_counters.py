#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤ —É –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤.
–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç active_chats –≤ OperatorPresence —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ Dialog.
"""

import sys
import os
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from database.connection import get_db
from database.models import OperatorPresence, Dialog

def fix_operator_counters():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å—á–µ—Ç—á–∏–∫–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤ —É –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤."""
    db = next(get_db())
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤
        operators = db.query(OperatorPresence).all()
        
        print(f"üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º {len(operators)} –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤...")
        
        fixed_count = 0
        for operator in operators:
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–µ–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤
            actual_active = db.query(Dialog).filter(
                Dialog.assigned_manager_id == operator.user_id,
                Dialog.handoff_status == 'active'
            ).count()
            
            if operator.active_chats != actual_active:
                print(f"üë§ –û–ø–µ—Ä–∞—Ç–æ—Ä {operator.user_id}:")
                print(f"   –ë—ã–ª–æ: {operator.active_chats} –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤")
                print(f"   –°—Ç–∞–ª–æ: {actual_active} –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤")
                
                operator.active_chats = actual_active
                fixed_count += 1
        
        if fixed_count > 0:
            db.commit()
            print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {fixed_count} –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤")
        else:
            print("‚úÖ –í—Å–µ —Å—á–µ—Ç—á–∏–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
            
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print("\nüìä –¢–µ–∫—É—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        for operator in operators:
            print(f"   –û–ø–µ—Ä–∞—Ç–æ—Ä {operator.user_id}: {operator.active_chats}/{operator.max_active_chats_web} –¥–∏–∞–ª–æ–≥–æ–≤")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        db.rollback()
        raise
    finally:
        db.close()

if __name__ == "__main__":
    fix_operator_counters()