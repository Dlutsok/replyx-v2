#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ system_settings.

–ü—Ä–æ–≤–µ—Ä—è–µ—Ç:
1. –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å SQL —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –º–∏–≥—Ä–∞—Ü–∏–∏
2. –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –º–æ–¥–µ–ª–∏ SystemSettings –≤ models.py
3. –ù–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∏–Ω–¥–µ–∫—Å–æ–≤
4. –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
"""

import sys
import os
import re
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..'))

def validate_migration_file():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å."""
    migration_file = '/Users/dan/Documents/chatAI/MVP 11/backend/alembic/versions/202508261209_create_system_settings_table.py'
    
    if not os.path.exists(migration_file):
        print("‚ùå –§–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    with open(migration_file, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∏–≥—Ä–∞—Ü–∏–∏
    checks = [
        ('revision', r'revision:\s*str\s*=\s*[\'"]202508261209_create_system_settings_table[\'"]'),
        ('down_revision', r'down_revision.*=.*[\'"]386658517a4d[\'"]'),
        ('upgrade function', r'def upgrade\(\)\s*->\s*None:'),
        ('downgrade function', r'def downgrade\(\)\s*->\s*None:'),
        ('create_table', r'op\.create_table\([\'"]system_settings[\'"]'),
        ('unique constraint', r'ix_system_settings_category_key.*unique=True'),
        ('foreign key', r'ForeignKeyConstraint.*users\.id'),
        ('bulk_insert', r'op\.bulk_insert'),
        ('drop_table in downgrade', r'op\.drop_table\([\'"]system_settings[\'"]'),
    ]
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:")
    all_passed = True
    
    for check_name, pattern in checks:
        if re.search(pattern, content, re.MULTILINE | re.DOTALL):
            print(f"‚úÖ {check_name}")
        else:
            print(f"‚ùå {check_name}")
            all_passed = False
    
    return all_passed

def validate_model_consistency():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏ –∏ –º–æ–¥–µ–ª–∏."""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –º–æ–¥–µ–ª–∏:")
    
    model_file = '/Users/dan/Documents/chatAI/MVP 11/backend/database/models.py'
    migration_file = '/Users/dan/Documents/chatAI/MVP 11/backend/alembic/versions/202508261209_create_system_settings_table.py'
    
    with open(model_file, 'r', encoding='utf-8') as f:
        model_content = f.read()
    
    with open(migration_file, 'r', encoding='utf-8') as f:
        migration_content = f.read()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—è –º–æ–¥–µ–ª–∏
    model_fields = [
        'id', 'category', 'key', 'value', 'data_type', 'is_sensitive',
        'description', 'default_value', 'is_active', 'created_at', 
        'updated_at', 'updated_by'
    ]
    
    all_passed = True
    for field in model_fields:
        if field in migration_content:
            print(f"‚úÖ –ø–æ–ª–µ {field}")
        else:
            print(f"‚ùå –ø–æ–ª–µ {field} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –º–∏–≥—Ä–∞—Ü–∏–∏")
            all_passed = False
    
    return all_passed

def validate_initial_data():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö."""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:")
    
    migration_file = '/Users/dan/Documents/chatAI/MVP 11/backend/alembic/versions/202508261209_create_system_settings_table.py'
    
    with open(migration_file, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    categories = ['general', 'ai', 'email', 'security', 'limits', 'maintenance']
    all_passed = True
    
    for category in categories:
        if f"'category': '{category}'" in content:
            print(f"‚úÖ –∫–∞—Ç–µ–≥–æ—Ä–∏—è {category}")
        else:
            print(f"‚ùå –∫–∞—Ç–µ–≥–æ—Ä–∏—è {category} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            all_passed = False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    critical_settings = [
        'site_name', 'maintenance_mode', 'default_model', 'session_timeout',
        'max_documents_per_user', 'registration_enabled'
    ]
    
    for setting in critical_settings:
        if f"'key': '{setting}'" in content:
            print(f"‚úÖ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ {setting}")
        else:
            print(f"‚ùå –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ {setting} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            all_passed = False
    
    return all_passed

def validate_indexes():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–¥–µ–∫—Å–æ–≤."""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–¥–µ–∫—Å–æ–≤:")
    
    migration_file = '/Users/dan/Documents/chatAI/MVP 11/backend/alembic/versions/202508261209_create_system_settings_table.py'
    
    with open(migration_file, 'r', encoding='utf-8') as f:
        content = f.read()
    
    required_indexes = [
        ('category_key unique', 'ix_system_settings_category_key.*unique=True'),
        ('category index', 'ix_system_settings_category'),
        ('key index', 'ix_system_settings_key'),
        ('is_active index', 'ix_system_settings_is_active'),
    ]
    
    all_passed = True
    for index_name, pattern in required_indexes:
        if re.search(pattern, content):
            print(f"‚úÖ {index_name}")
        else:
            print(f"‚ùå {index_name}")
            all_passed = False
    
    return all_passed

def validate_rollback():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–∫–∞—Ç–∞."""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–∫–∞—Ç–∞:")
    
    migration_file = '/Users/dan/Documents/chatAI/MVP 11/backend/alembic/versions/202508261209_create_system_settings_table.py'
    
    with open(migration_file, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ù–∞—Ö–æ–¥–∏–º —Ñ—É–Ω–∫—Ü–∏—é downgrade
    downgrade_match = re.search(r'def downgrade\(\).*?(?=def|\Z)', content, re.DOTALL)
    
    if not downgrade_match:
        print("‚ùå –§—É–Ω–∫—Ü–∏—è downgrade –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    downgrade_content = downgrade_match.group(0)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—è–¥–æ–∫ —É–¥–∞–ª–µ–Ω–∏—è (–∏–Ω–¥–µ–∫—Å—ã –ø–µ—Ä–µ–¥ —Ç–∞–±–ª–∏—Ü–∞–º–∏)
    drop_operations = re.findall(r'op\.drop_\w+', downgrade_content)
    
    if not drop_operations:
        print("‚ùå –û–ø–µ—Ä–∞—Ü–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∏–Ω–¥–µ–∫—Å—ã —É–¥–∞–ª—è—é—Ç—Å—è –ø–µ—Ä–µ–¥ —Ç–∞–±–ª–∏—Ü–µ–π
    table_drop_found = False
    for op in drop_operations:
        if 'drop_table' in op:
            table_drop_found = True
        elif table_drop_found and 'drop_index' in op:
            print("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ —É–¥–∞–ª–µ–Ω–∏—è: –∏–Ω–¥–µ–∫—Å—ã –ø–æ—Å–ª–µ —Ç–∞–±–ª–∏—Ü—ã")
            return False
    
    print("‚úÖ –ü–æ—Ä—è–¥–æ–∫ –æ–ø–µ—Ä–∞—Ü–∏–π –≤ downgrade –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π")
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏."""
    print("üîß –í–∞–ª–∏–¥–∞—Ü–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏ system_settings\n")
    
    checks = [
        ("–§–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏", validate_migration_file),
        ("–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –º–æ–¥–µ–ª–∏", validate_model_consistency),
        ("–ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", validate_initial_data),
        ("–ò–Ω–¥–µ–∫—Å—ã", validate_indexes),
        ("–§—É–Ω–∫—Ü–∏—è –æ—Ç–∫–∞—Ç–∞", validate_rollback),
    ]
    
    all_passed = True
    for check_name, check_func in checks:
        try:
            result = check_func()
            all_passed = all_passed and result
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ {check_name}: {e}")
            all_passed = False
    
    print(f"\n{'='*50}")
    if all_passed:
        print("‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! –ú–∏–≥—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é.")
        print("\n–î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
        print("cd /Users/dan/Documents/chatAI/MVP\\ 9/backend")
        print("alembic upgrade head")
        return 0
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º.")
        return 1

if __name__ == "__main__":
    sys.exit(main())