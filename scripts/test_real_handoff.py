#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ handoff –∑–∞–ø—Ä–æ—Å–∞ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å
–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π –¥–∏–∞–ª–æ–≥ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç handoff –∑–∞–ø—Ä–æ—Å
"""

import sys
import os
from pathlib import Path
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ backend –º–æ–¥—É–ª—è–º
backend_path = Path(__file__).parent.parent / "backend"
sys.path.append(str(backend_path))

try:
    from database.connection import get_db
    from database import models
    from services.handoff_service import HandoffService
    from core.app_config import HANDOFF_RECIPIENTS
    print("‚úì –ú–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª–µ–π: {e}")
    sys.exit(1)

def create_test_dialog(db):
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π –¥–∏–∞–ª–æ–≥ –¥–ª—è handoff"""
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    test_user = db.query(models.User).filter(models.User.email == "test@handoff.ru").first()
    if not test_user:
        from werkzeug.security import generate_password_hash
        test_user = models.User(
            email="test@handoff.ru",
            hashed_password=generate_password_hash("test123"),
            first_name="Test Handoff",
            role="user"
        )
        db.add(test_user)
        db.flush()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–∏–∞–ª–æ–≥
    test_dialog = models.Dialog(
        user_id=test_user.id,
        first_name="Test Handoff",
        handoff_status="none",
        is_taken_over=0
    )
    db.add(test_dialog)
    db.flush()
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_message = models.DialogMessage(
        dialog_id=test_dialog.id,
        sender="user",
        text="–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ú–Ω–µ –æ—á–µ–Ω—å –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –∂–∏–≤–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏.",
        message_kind="text",
        timestamp=datetime.utcnow()
    )
    db.add(user_message)
    
    db.commit()
    return test_dialog

def test_handoff_with_real_service():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç handoff —á–µ—Ä–µ–∑ –Ω–∞—Å—Ç–æ—è—â–∏–π HandoffService"""
    
    print("üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π handoff –∑–∞–ø—Ä–æ—Å")
    print("=" * 60)
    
    db = next(get_db())
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–∏–∞–ª–æ–≥
        print("üìù –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–∏–∞–ª–æ–≥...")
        test_dialog = create_test_dialog(db)
        print(f"‚úÖ –î–∏–∞–ª–æ–≥ —Å–æ–∑–¥–∞–Ω —Å ID: {test_dialog.id}")
        
        # –°–æ–∑–¥–∞–µ–º handoff service
        handoff_service = HandoffService(db)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
        print(f"üìß –ü–æ–ª—É—á–∞—Ç–µ–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {HANDOFF_RECIPIENTS or '–∞–¥–º–∏–Ω—ã –∏–∑ –ë–î'}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º handoff –∑–∞–ø—Ä–æ—Å
        print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º handoff –∑–∞–ø—Ä–æ—Å...")
        result = handoff_service.request_handoff(
            dialog_id=test_dialog.id,
            reason="keyword",
            last_user_text="–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ú–Ω–µ –æ—á–µ–Ω—å –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –∂–∏–≤–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏."
        )
        
        print(f"‚úÖ Handoff –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
        print(f"   –°—Ç–∞—Ç—É—Å: {result.status}")
        print(f"   –ó–∞–ø—Ä–æ—à–µ–Ω –≤: {result.requested_at}")
        print(f"   –ü—Ä–∏—á–∏–Ω–∞: {result.reason}")
        print(f"   Request ID: {result.request_id}")
        
        if result.queue_position:
            print(f"   –ü–æ–∑–∏—Ü–∏—è –≤ –æ—á–µ—Ä–µ–¥–∏: {result.queue_position}")
            print(f"   –û–∂–∏–¥–∞–µ–º–æ–µ –≤—Ä–µ–º—è: {result.estimated_wait_minutes} –º–∏–Ω—É—Ç")
        
        print()
        print("üì¨ Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!")
        print("üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç–æ–≤—ã–π —è—â–∏–∫ dlutsok13@yandex.ru")
        
        # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        print()
        print("üßπ –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...")
        db.query(models.DialogMessage).filter(models.DialogMessage.dialog_id == test_dialog.id).delete()
        db.query(models.HandoffAudit).filter(models.HandoffAudit.dialog_id == test_dialog.id).delete()
        db.delete(test_dialog)
        db.commit()
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        db.rollback()
        return False
    finally:
        db.close()

def main():
    print("üîß ReplyX Real Handoff Test")
    print()
    
    success = test_handoff_with_real_service()
    
    print()
    print("=" * 60)
    if success:
        print("üéâ –†–µ–∞–ª—å–Ω—ã–π handoff —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("üí¨ Handoff —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞—é—Ç —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å!")
        print("üìß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–∏—Å—å–º–∞ —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º:")
        print("   [Handoff requested] –î–∏–∞–ª–æ–≥ #XXXXX | keyword | ...")
    else:
        print("‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è")
        print("–ù—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å handoff service")

if __name__ == "__main__":
    main()