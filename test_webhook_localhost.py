#!/usr/bin/env python3
"""
–¢–µ—Å—Ç webhook endpoint –Ω–∞ localhost —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ–¥–ø–∏—Å—å—é
"""
import requests
import json
import hashlib

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑ .env
TINKOFF_SECRET_KEY = "lczutIQhGoZoZrgW"

def calculate_signature(data: dict) -> str:
    """–¢–æ—á–Ω–∞—è –∫–æ–ø–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ backend/api/tinkoff_payments.py"""
    # –ò—Å–∫–ª—é—á–∞–µ–º –ø–æ–ª–µ –ø–æ–¥–ø–∏—Å–∏, –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ None
    filtered_data = {k: v for k, v in data.items() 
                    if k not in ['token', 'Token'] and v is not None and str(v).strip() != ''}
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –∫–∞–∫ Password (—Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏)
    filtered_data['Password'] = TINKOFF_SECRET_KEY
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∫–ª—é—á–∞–º –∏ —Å–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏–∏
    sorted_keys = sorted(filtered_data.keys())
    concatenated_values = [str(filtered_data[key]) for key in sorted_keys]
    concatenated_string = ''.join(concatenated_values)
    
    print(f"üî§ –°—Ç—Ä–æ–∫–∞ –¥–ª—è —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è: {concatenated_string[:50]}...")
    print(f"üìù –ö–ª—é—á–∏: {sorted_keys}")
    
    # –í—ã—á–∏—Å–ª—è–µ–º SHA256 —Ö—ç—à
    return hashlib.sha256(concatenated_string.encode('utf-8')).hexdigest()

# –°–æ–∑–¥–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ (–Ω—É–∂–Ω–æ –±—ã—Ç—å –≤ –ë–î)
webhook_data = {
    "TerminalKey": "1757348842151DEMO",
    "OrderId": "replyx_1757522000_abcd1234",  # –§–æ—Ä–º–∞—Ç –∫–∞–∫ –≤ –∫–æ–¥–µ
    "Success": True,
    "Status": "CONFIRMED",
    "PaymentId": "987654321",
    "ErrorCode": "0",
    "Amount": 10000,  # 100 —Ä—É–±–ª–µ–π –≤ –∫–æ–ø–µ–π–∫–∞—Ö
    "Pan": "430000******0777"
}

# –í—ã—á–∏—Å–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å
token = calculate_signature(webhook_data)
webhook_data["Token"] = token

print("üì¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook endpoint –Ω–∞ localhost...")
print(f"üìù –î–∞–Ω–Ω—ã–µ webhook:")
for k, v in webhook_data.items():
    if k != "Token":
        print(f"  {k}: {v}")
print(f"üîê –ü–æ–¥–ø–∏—Å—å: {token}")
print()

# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º webhook
url = "http://localhost:8000/api/payments/tinkoff-notification"
try:
    response = requests.post(url, json=webhook_data, timeout=30)
    print(f"üì§ –û—Ç–≤–µ—Ç webhook endpoint (—Å—Ç–∞—Ç—É—Å {response.status_code}):")
    
    if response.headers.get('content-type', '').startswith('application/json'):
        print(json.dumps(response.json(), indent=2, ensure_ascii=False))
    else:
        print(response.text)
        
    if response.status_code == 404:
        print("üí° –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î - —ç—Ç–æ –æ–∂–∏–¥–∞–µ–º–æ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ OrderId")
    elif response.status_code == 401:
        print("üí° –ù–µ–≤–µ—Ä–Ω–∞—è –ø–æ–¥–ø–∏—Å—å - –ø—Ä–æ–≤–µ—Ä–∏–º –∞–ª–≥–æ—Ä–∏—Ç–º...")
    elif response.status_code == 200:
        print("‚úÖ Webhook –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        
except requests.exceptions.RequestException as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ webhook –∑–∞–ø—Ä–æ—Å–∞: {e}")

print("\n" + "="*50)
print("üìä –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–´:")
print("‚úÖ –¢—É–Ω–Ω–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω: https://huge-terms-sell.loca.lt")  
print("‚úÖ TINKOFF_NOTIFICATION_URL –¥–æ–±–∞–≤–ª–µ–Ω –≤ .env")
print("‚úÖ Backend –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω –∏ –ø–æ–¥—Ö–≤–∞—Ç–∏–ª –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
print("‚úÖ Webhook endpoint –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ localhost")
print("‚ö†Ô∏è  –ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑ –≤ –ë–î –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞")
print("‚ö†Ô∏è  Localtunnel –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞:")
print("   - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ngrok —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π")
print("   - –ò–ª–∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–æ–≤")
print("="*50)