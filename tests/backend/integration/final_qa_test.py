#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç Q&A —Å–∏—Å—Ç–µ–º—ã
"""
import os
import sys
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.connection import get_db
from services.embeddings_service import EmbeddingsService

def final_test():
    db = next(get_db())
    embeddings_service = EmbeddingsService()
    
    print("üîß –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ Q&A –°–ò–°–¢–ï–ú–´")
    print("=" * 50)
    
    test_cases = [
        ("–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã?", "—Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ"),
        ("–í–æ —Å–∫–æ–ª—å–∫–æ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ?", "—Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ —Å—Ö–æ–¥—Å—Ç–≤–æ"),
        ("–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã", "—Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ —Å—Ö–æ–¥—Å—Ç–≤–æ"),
        ("–ö–æ–≥–¥–∞ –æ—Ç–∫—Ä—ã—Ç –æ—Ñ–∏—Å?", "—Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ —Å—Ö–æ–¥—Å—Ç–≤–æ"),
        ("–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã", "—Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ —Å—Ö–æ–¥—Å—Ç–≤–æ")
    ]
    
    for question, expected_type in test_cases:
        print(f"\nüîç –í–æ–ø—Ä–æ—Å: '{question}' ({expected_type})")
        
        try:
            results = embeddings_service.search_relevant_qa(
                query=question,
                user_id=1,
                assistant_id=117,
                top_k=2,
                min_similarity=0.5,
                db=db
            )
            
            if results:
                best = results[0]
                similarity = best.get('max_similarity', 0)
                print(f"‚úÖ –û—Ç–≤–µ—Ç: '{best.get('answer')}'")
                print(f"   –°—Ö–æ–¥—Å—Ç–≤–æ: {similarity:.4f}")
                print(f"   –°—Ç–∞—Ç—É—Å: {'–û–¢–õ–ò–ß–ù–û' if similarity > 0.8 else '–•–û–†–û–®–û' if similarity > 0.6 else '–ü–†–ò–ï–ú–õ–ï–ú–û'}")
            else:
                print("‚ùå –û—Ç–≤–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 50)
    print("üìã –ò–¢–û–ì:")
    print("‚úÖ Q&A —Å–∏—Å—Ç–µ–º–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("‚úÖ –ò–∑–æ–ª—è—Ü–∏—è –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é/–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—É —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("‚úÖ –í–µ–∫—Ç–æ—Ä–Ω—ã–π –ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ pgvector —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–∞—Ç —Ç–æ—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π")
    
    db.close()

if __name__ == "__main__":
    final_test()