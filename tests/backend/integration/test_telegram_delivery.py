#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –≤ Telegram
"""
import asyncio
import requests
from services.bot_manager import send_operator_message_to_telegram
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

async def test_telegram_delivery():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram")
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å bot manager
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ bot manager —Å–µ—Ä–≤–∏—Å–∞:")
    try:
        response = requests.get('http://localhost:3002', timeout=5)
        print(f"‚úÖ Bot manager –¥–æ—Å—Ç—É–ø–µ–Ω: HTTP {response.status_code}")
    except Exception as e:
        print(f"‚ùå Bot manager –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return False
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º endpoint /send-operator-message
    print("\n2. –¢–µ—Å—Ç endpoint /send-operator-message:")
    try:
        test_data = {
            "telegram_chat_id": "123456789",  # –¢–µ—Å—Ç–æ–≤—ã–π chat ID
            "text": "üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞",
            "operator_name": "–¢–µ—Å—Ç–æ–≤—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä"
        }
        
        response = requests.post(
            'http://localhost:3002/send-operator-message',
            json=test_data,
            timeout=10
        )
        
        print(f"üì§ HTTP Status: {response.status_code}")
        print(f"üì§ Response: {response.text[:200]}...")
        
        if response.status_code == 200:
            print("‚úÖ Endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ endpoint: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ endpoint: {e}")
    
    # 3. –¢–µ—Å—Ç —á–µ—Ä–µ–∑ bot_manager.py —Ñ—É–Ω–∫—Ü–∏—é
    print("\n3. –¢–µ—Å—Ç —á–µ—Ä–µ–∑ send_operator_message_to_telegram:")
    try:
        await send_operator_message_to_telegram(
            telegram_chat_id="123456789",
            text="üß™ –¢–µ—Å—Ç —á–µ—Ä–µ–∑ bot_manager —Ñ—É–Ω–∫—Ü–∏—é",
            operator_name="–¢–µ—Å—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä"
        )
        print("‚úÖ –§—É–Ω–∫—Ü–∏—è send_operator_message_to_telegram –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ send_operator_message_to_telegram: {e}")
        import traceback
        traceback.print_exc()
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –¥–∏–∞–ª–æ–≥–∏ —Å telegram_chat_id
    print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö Telegram –¥–∏–∞–ª–æ–≥–æ–≤:")
    try:
        response = requests.get('http://localhost:8000/api/dialogs', timeout=5)
        if response.status_code == 200:
            dialogs = response.json()
            telegram_dialogs = [d for d in dialogs if d.get('telegram_chat_id')]
            print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(telegram_dialogs)} Telegram –¥–∏–∞–ª–æ–≥–æ–≤")
            
            for dialog in telegram_dialogs[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"  - –î–∏–∞–ª–æ–≥ {dialog['id']}: chat_id={dialog.get('telegram_chat_id')}, status={dialog.get('handoff_status', 'none')}")
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∏–∞–ª–æ–≥–∏: HTTP {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–æ–≤: {e}")

if __name__ == "__main__":
    asyncio.run(test_telegram_delivery())