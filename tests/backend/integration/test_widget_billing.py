#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Å–ø–∏—Å–∞–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ –∑–∞ –≤–∏–¥–∂–µ—Ç-—Å–æ–æ–±—â–µ–Ω–∏—è
"""
import os
import sys
import requests
import json
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ backend –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def test_widget_billing():
    """–¢–µ—Å—Ç —Å–ø–∏—Å–∞–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ –∑–∞ –≤–∏–¥–∂–µ—Ç-—Å–æ–æ–±—â–µ–Ω–∏—è"""
    
    # URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä)
    base_url = "http://localhost:8000"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Å–ø–∏—Å–∞–Ω–∏—è –∑–∞ –≤–∏–¥–∂–µ—Ç-—Å–æ–æ–±—â–µ–Ω–∏—è")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å service_price –¥–ª—è widget_message
    try:
        response = requests.get(f"{base_url}/api/balance/prices")
        if response.status_code == 200:
            prices = response.json()
            widget_price = next((p for p in prices if p['service_type'] == 'widget_message'), None)
            if widget_price:
                print(f"‚úÖ Service price –¥–ª—è widget_message –Ω–∞–π–¥–µ–Ω: {widget_price['price']} —Ä—É–±.")
            else:
                print("‚ùå Service price –¥–ª—è widget_message –ù–ï –Ω–∞–π–¥–µ–Ω!")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω: {response.status_code}")
            return False
    except requests.exceptions.ConnectionError:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω –Ω–∞ localhost:8000")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: cd backend && uvicorn main:app --reload")
        return False
    
    # –°–∏–º—É–ª—è—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–∏–¥–∂–µ—Ç–∞
    print("\nüìù –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ —Å–∏—Å—Ç–µ–º–µ:")
    
    expected_types = ['ai_message', 'widget_message', 'document_upload', 'bot_message']
    for transaction_type in expected_types:
        type_price = next((p for p in prices if p['service_type'] == transaction_type), None)
        if type_price:
            print(f"   ‚úÖ {transaction_type}: {type_price['price']} —Ä—É–±. - {type_price['description']}")
        else:
            print(f"   ‚ùå {transaction_type}: –ù–ï –ù–ê–ô–î–ï–ù")
    
    print("\nüí° –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Å–ø–∏—Å–∞–Ω–∏—é –∑–∞ –≤–∏–¥–∂–µ—Ç-—Å–æ–æ–±—â–µ–Ω–∏—è!")
    print("   –ö–∞–∂–¥–æ–µ AI-—Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≤–∏–¥–∂–µ—Ç–µ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å 5 —Ä—É–±–ª–µ–π")
    print("   –†–∞—Å—Ö–æ–¥—ã –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ '–†–∞—Å—Ö–æ–¥—ã' —Å –∏–∫–æ–Ω–∫–æ–π üåê")
    
    return True

if __name__ == "__main__":
    success = test_widget_billing()
    sys.exit(0 if success else 1)