#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–æ–º–µ–Ω–æ–≤ –≤–∏–¥–∂–µ—Ç–∞
–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–∫–µ–Ω—ã —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–æ–º–µ–Ω–æ–≤
"""

import requests
import json
import time
from urllib.parse import urlparse, parse_qs

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
API_BASE = "http://localhost:8000"
TEST_EMAIL = "admin@example.com" 
TEST_PASSWORD = "admin123"  # –ü–æ–ø—Ä–æ–±—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å

def login():
    """–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞"""
    response = requests.post(f"{API_BASE}/api/login", data={
        "username": TEST_EMAIL,
        "password": TEST_PASSWORD
    })
    if response.status_code == 200:
        return response.json()["access_token"]
    else:
        print(f"–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")
        print(response.text)
        return None

def get_assistants(token):
    """–ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤"""
    headers = {"Authorization": f"Bearer {token}"}
    response = requests.get(f"{API_BASE}/api/assistants", headers=headers)
    if response.status_code == 200:
        return response.json()
    return []

def update_assistant_domains(token, assistant_id, domains):
    """–û–±–Ω–æ–≤–ª—è–µ–º –¥–æ–º–µ–Ω—ã –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"""
    headers = {
        "Authorization": f"Bearer {token}",
        "Content-Type": "application/json"
    }
    data = {"allowed_domains": domains}
    response = requests.patch(f"{API_BASE}/api/assistants/{assistant_id}", 
                            headers=headers, json=data)
    return response.status_code == 200

def get_embed_code(token, assistant_id):
    """–ü–æ–ª—É—á–∞–µ–º embed –∫–æ–¥"""
    headers = {"Authorization": f"Bearer {token}"}
    response = requests.get(f"{API_BASE}/api/assistants/{assistant_id}/embed-code", 
                          headers=headers)
    if response.status_code == 200:
        return response.json()
    return None

def validate_widget_token(widget_token, domain):
    """–í–∞–ª–∏–¥–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω –≤–∏–¥–∂–µ—Ç–∞"""
    response = requests.post(f"{API_BASE}/api/validate-widget-token", json={
        "token": widget_token,
        "domain": domain
    })
    return response.json()

def extract_token_from_embed(embed_code):
    """–ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ embed –∫–æ–¥–∞"""
    # –ò—â–µ–º —Ç–æ–∫–µ–Ω –≤ src –ø–∞—Ä–∞–º–µ—Ç—Ä–µ
    if "token=" in embed_code:
        start = embed_code.find("token=") + 6
        end = embed_code.find("&", start)
        if end == -1:
            end = embed_code.find('"', start)
        return embed_code[start:end]
    return None

def main():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–æ–º–µ–Ω–æ–≤ –≤–∏–¥–∂–µ—Ç–∞")
    print("=" * 50)
    
    # –®–∞–≥ 1: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    print("1. –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è...")
    auth_token = login()
    if not auth_token:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è")
        return
    print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
    
    # –®–∞–≥ 2: –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
    print("\n2. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤...")
    assistants = get_assistants(auth_token)
    if not assistants:
        print("‚ùå –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    assistant = assistants[0]
    assistant_id = assistant["id"]
    print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞: {assistant['name']} (ID: {assistant_id})")
    
    # –®–∞–≥ 3: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω
    test_domain = "example.com"
    print(f"\n3. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–º–µ–Ω: {test_domain}")
    if update_assistant_domains(auth_token, assistant_id, test_domain):
        print("‚úÖ –î–æ–º–µ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ–º–µ–Ω")
        return
    
    # –®–∞–≥ 4: –ü–æ–ª—É—á–∞–µ–º embed –∫–æ–¥ —Å —Ç–æ–∫–µ–Ω–æ–º
    print("\n4. –ü–æ–ª—É—á–∞–µ–º embed –∫–æ–¥...")
    embed_data = get_embed_code(auth_token, assistant_id)
    if not embed_data:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å embed –∫–æ–¥")
        return
    
    widget_token = embed_data["token"]
    print("‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω")
    print(f"–¢–æ–∫–µ–Ω: {widget_token[:50]}...")
    
    # –®–∞–≥ 5: –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –¥–æ–º–µ–Ω–æ–º
    print(f"\n5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é —Å –¥–æ–º–µ–Ω–æ–º: {test_domain}")
    validation1 = validate_widget_token(widget_token, test_domain)
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {validation1}")
    if validation1.get("valid"):
        print("‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
    else:
        print("‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞")
    
    # –®–∞–≥ 6: –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –¥–æ–º–µ–Ω–æ–º
    wrong_domain = "wrongdomain.com"
    print(f"\n6. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –¥–æ–º–µ–Ω–æ–º: {wrong_domain}")
    validation2 = validate_widget_token(widget_token, wrong_domain)
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {validation2}")
    if not validation2.get("valid"):
        print("‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞")
    else:
        print("‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã–ª–∞ –ø—Ä–æ–π—Ç–∏")
    
    # –®–∞–≥ 7: –ö–õ–Æ–ß–ï–í–û–ô –¢–ï–°–¢ - –º–µ–Ω—è–µ–º –¥–æ–º–µ–Ω—ã –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ä—ã–π —Ç–æ–∫–µ–Ω
    print(f"\n7. üéØ –ö–õ–Æ–ß–ï–í–û–ô –¢–ï–°–¢: –ú–µ–Ω—è–µ–º –¥–æ–º–µ–Ω—ã –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ä—ã–π —Ç–æ–∫–µ–Ω")
    new_domain = "newdomain.com"
    print(f"–ú–µ–Ω—è–µ–º –¥–æ–º–µ–Ω –Ω–∞: {new_domain}")
    
    if update_assistant_domains(auth_token, assistant_id, new_domain):
        print("‚úÖ –î–æ–º–µ–Ω –∏–∑–º–µ–Ω–µ–Ω")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –¥–æ–º–µ–Ω")
        return
    
    # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    time.sleep(1)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–π —Ç–æ–∫–µ–Ω —Å–æ —Å—Ç–∞—Ä—ã–º –¥–æ–º–µ–Ω–æ–º
    print(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º –°–¢–ê–†–´–ô —Ç–æ–∫–µ–Ω —Å–æ –°–¢–ê–†–´–ú –¥–æ–º–µ–Ω–æ–º: {test_domain}")
    validation3 = validate_widget_token(widget_token, test_domain)
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {validation3}")
    
    if not validation3.get("valid") and "Domains changed" in validation3.get("reason", ""):
        print("üéâ ‚úÖ –û–¢–õ–ò–ß–ù–û! –°—Ç–∞—Ä—ã–π —Ç–æ–∫–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∏–∑-–∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–æ–º–µ–Ω–æ–≤")
    else:
        print("üö® ‚ùå –ü–†–û–ë–õ–ï–ú–ê! –°—Ç–∞—Ä—ã–π —Ç–æ–∫–µ–Ω –≤—Å–µ –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–π —Ç–æ–∫–µ–Ω —Å –Ω–æ–≤—ã–º –¥–æ–º–µ–Ω–æ–º
    print(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º –°–¢–ê–†–´–ô —Ç–æ–∫–µ–Ω —Å –ù–û–í–´–ú –¥–æ–º–µ–Ω–æ–º: {new_domain}")
    validation4 = validate_widget_token(widget_token, new_domain)
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {validation4}")
    
    if not validation4.get("valid") and "Domains changed" in validation4.get("reason", ""):
        print("‚úÖ –°—Ç–∞—Ä—ã–π —Ç–æ–∫–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Å –Ω–æ–≤—ã–º –¥–æ–º–µ–Ω–æ–º")
    else:
        print("‚ùå –°—Ç–∞—Ä—ã–π —Ç–æ–∫–µ–Ω –Ω–µ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å —Å –Ω–æ–≤—ã–º –¥–æ–º–µ–Ω–æ–º")
    
    # –®–∞–≥ 8: –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ
    print(f"\n8. –ü–æ–ª—É—á–∞–µ–º –ù–û–í–´–ô —Ç–æ–∫–µ–Ω –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–æ–º–µ–Ω–æ–≤")
    new_embed_data = get_embed_code(auth_token, assistant_id)
    if new_embed_data:
        new_widget_token = new_embed_data["token"]
        print("‚úÖ –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω —Å –Ω–æ–≤—ã–º –¥–æ–º–µ–Ω–æ–º
        validation5 = validate_widget_token(new_widget_token, new_domain)
        print(f"–ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω + –Ω–æ–≤—ã–π –¥–æ–º–µ–Ω: {validation5}")
        
        if validation5.get("valid"):
            print("‚úÖ –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –Ω–æ–≤—ã–º –¥–æ–º–µ–Ω–æ–º")
        else:
            print("‚ùå –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å —Å –Ω–æ–≤—ã–º –¥–æ–º–µ–Ω–æ–º")
    
    # –®–∞–≥ 9: –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤
    print(f"\n9. –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤")
    if update_assistant_domains(auth_token, assistant_id, ""):
        print("‚úÖ –î–æ–º–µ–Ω—ã —É–¥–∞–ª–µ–Ω—ã (–ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞)")
        
        time.sleep(1)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–∫–µ–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –¥–æ–º–µ–Ω–æ–≤
        validation6 = validate_widget_token(new_widget_token, new_domain)
        print(f"–¢–æ–∫–µ–Ω –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –¥–æ–º–µ–Ω–æ–≤: {validation6}")
        
        if not validation6.get("valid"):
            print("‚úÖ –¢–æ–∫–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –¥–æ–º–µ–Ω–æ–≤")
        else:
            print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –¥–æ–º–µ–Ω–æ–≤")
    
    print("\n" + "=" * 50)
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    main()